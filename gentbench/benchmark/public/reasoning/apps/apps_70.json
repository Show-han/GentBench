{
    "problem": "You are an expert Python programmer, and here is your task: Iahub got lost in a very big desert. The desert can be represented as a n \u00d7 n square matrix, where each cell is a zone of the desert. The cell (i, j) represents the cell at row i and column j (1 \u2264 i, j \u2264 n). Iahub can go from one cell (i, j) only down or right, that is to cells (i + 1, j) or (i, j + 1). \n\nAlso, there are m cells that are occupied by volcanoes, which Iahub cannot enter. \n\nIahub is initially at cell (1, 1) and he needs to travel to cell (n, n). Knowing that Iahub needs 1 second to travel from one cell to another, find the minimum time in which he can arrive in cell (n, n).\n\n\n-----Input-----\n\nThe first line contains two integers n (1 \u2264 n \u2264 10^9) and m (1 \u2264 m \u2264 10^5). Each of the next m lines contains a pair of integers, x and y (1 \u2264 x, y \u2264 n), representing the coordinates of the volcanoes.\n\nConsider matrix rows are numbered from 1 to n from top to bottom, and matrix columns are numbered from 1 to n from left to right. There is no volcano in cell (1, 1). No two volcanoes occupy the same location. \n\n\n-----Output-----\n\nPrint one integer, the minimum time in which Iahub can arrive at cell (n, n). If no solution exists (there is no path to the final cell), print -1.\n\n\n-----Examples-----\nInput\n4 2\n1 3\n1 4\n\nOutput\n6\n\nInput\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\nOutput\n12\n\nInput\n2 2\n1 2\n2 1\n\nOutput\n-1\n\n\n\n-----Note-----\n\nConsider the first sample. A possible road is: (1, 1)  \u2192  (1, 2)  \u2192  (2, 2)  \u2192  (2, 3)  \u2192  (3, 3)  \u2192  (3, 4)  \u2192  (4, 4).",
    "solution": "[\"__author__ = 'Pavel Mavrin'\\n\\nn, m = [int(x) for x in input().split()]\\na = []\\nfor i in range(m):\\n    a.append([int(x) - 1 for x in input().split()])\\n\\na.sort(key=lambda x: x[0] * n + x[1])\\na.append([n - 1, n])\\n\\nd = [[0, 1]]\\nr = 0\\ni = 0\\nwhile i < len(a):\\n    if a[i][0] == r:\\n        dd = []\\n        j = 0\\n        while i < len(a) and a[i][0] == r and j < len(d):\\n            if a[i][1] < d[j][0]:\\n                i += 1\\n            elif a[i][1] == d[j][0]:\\n                d[j][0] += 1\\n                if d[j][0] >= d[j][1]:\\n                    j += 1\\n                i += 1\\n            else:\\n                dd.append([d[j][0], a[i][1]])\\n                d[j][0] = a[i][1] + 1\\n                while j < len(d) and d[j][1] <= a[i][1] + 1:\\n                    j += 1\\n                if j < len(d):\\n                    d[j][0] = max(d[j][0], a[i][1] + 1)\\n        if j < len(d):\\n            dd.append([d[j][0], n])\\n        while i < len(a) and (a[i][0] == r):\\n            i += 1\\n        d = dd\\n        r += 1\\n        if len(d) == 0:\\n            break\\n    else:\\n        r = a[i][0]\\n        d = [[d[0][0], n]]\\n    #print(r, i, d)\\n\\nif len(d) == 0 or d[len(d) - 1][1] < n:\\n    print(-1)\\nelse:\\n    print(2 * (n - 1))\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"from collections import defaultdict\\n\\ndef f(u, v):\\n    s, l = [], len(v)\\n    i = j = 0\\n    for i in range(len(u)):\\n        while v[j][1] <= u[i][0]:\\n            j += 1\\n            if j == l: return s\\n        if u[i][1] <= v[j][0]: continue\\n        if u[i][0] >= v[j][0]: s.append(u[i])\\n        else: s.append((v[j][0], u[i][1]))\\n    return s\\n\\nn, m = map(int, input().split())\\np = defaultdict(list)\\n\\nfor i in range(m):\\n    x, y = map(int, input().split())\\n    p[x].append(y)\\n\\nfor x in p:\\n    if len(p[x]) > 1: p[x].sort()\\n    t, i = [], 1\\n    for j in p[x]:\\n        if i != j: t.append((i, j))\\n        i = j + 1\\n    if i != n + 1: t.append((i, n + 1))\\n    p[x] = t\\n\\nk, s = 1, [(1, 2)]\\nfor x in sorted(p.keys()):\\n    if x == k: s = f(p[x], s)\\n    else: s = f(p[x], [(s[0][0], n + 1)])\\n    if not s: break\\n    k = x + 1\\n\\nif s and k == n + 1 and s[-1][1] != k: s = []\\nprint(2 * (n - 1) if s else -1)\"]",
    "test": "{\n  \"inputs\": [\n    \"4 2\\n1 3\\n1 4\\n\",\n    \"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\",\n    \"2 2\\n1 2\\n2 1\\n\",\n    \"1000000000 9\\n1 2\\n3 1\\n3 2\\n999999998 999999999\\n999999998 1000000000\\n999999999 999999999\\n999999999 999999997\\n1000000000 999999996\\n1000000000 999999997\\n\",\n    \"1000000000 10\\n1 2\\n3 1\\n3 2\\n999999998 999999999\\n999999998 1000000000\\n999999999 999999999\\n999999999 999999997\\n1000000000 999999996\\n1000000000 999999997\\n999999999 999999998\\n\",\n    \"3 3\\n1 2\\n2 2\\n2 1\\n\",\n    \"2 1\\n1 2\\n\",\n    \"6 6\\n2 5\\n2 3\\n4 2\\n3 5\\n6 4\\n1 2\\n\",\n    \"7 12\\n6 1\\n6 2\\n1 6\\n7 5\\n2 3\\n5 4\\n4 2\\n1 2\\n3 5\\n1 4\\n6 5\\n4 7\\n\",\n    \"7 11\\n4 5\\n3 5\\n5 4\\n6 1\\n3 1\\n2 1\\n4 1\\n4 2\\n2 3\\n3 7\\n5 6\\n\",\n    \"8 2\\n7 2\\n5 2\\n\",\n    \"8 6\\n3 6\\n2 3\\n5 5\\n3 1\\n4 7\\n6 3\\n\",\n    \"9 15\\n1 8\\n2 5\\n2 8\\n3 5\\n3 7\\n4 5\\n4 8\\n5 2\\n5 3\\n6 5\\n6 6\\n8 2\\n8 8\\n9 1\\n9 5\\n\",\n    \"9 7\\n9 5\\n5 7\\n2 6\\n2 3\\n1 8\\n7 7\\n9 1\\n\",\n    \"10 12\\n2 8\\n3 4\\n6 8\\n4 5\\n1 4\\n5 6\\n3 3\\n6 4\\n4 3\\n5 3\\n9 5\\n10 2\\n\",\n    \"10 23\\n9 4\\n10 7\\n10 3\\n6 9\\n10 1\\n2 2\\n9 8\\n7 1\\n2 10\\n3 8\\n8 9\\n8 10\\n7 7\\n10 6\\n3 3\\n8 6\\n2 9\\n10 5\\n5 2\\n6 10\\n6 2\\n5 6\\n5 5\\n\",\n    \"11 11\\n2 2\\n7 10\\n5 6\\n5 5\\n1 8\\n2 3\\n1 3\\n7 8\\n9 5\\n8 2\\n1 4\\n\",\n    \"2 1\\n2 2\\n\",\n    \"11 6\\n4 2\\n1 11\\n5 3\\n4 9\\n8 10\\n2 5\\n\",\n    \"12 1\\n7 4\\n\",\n    \"12 2\\n9 12\\n7 2\\n\",\n    \"13 6\\n6 1\\n1 2\\n8 7\\n10 12\\n10 5\\n2 10\\n\",\n    \"13 18\\n2 7\\n9 6\\n9 5\\n2 1\\n12 12\\n8 8\\n2 3\\n8 11\\n10 6\\n10 11\\n11 3\\n8 2\\n5 2\\n2 6\\n5 11\\n3 1\\n9 1\\n3 2\\n\",\n    \"14 13\\n14 3\\n12 10\\n11 7\\n11 12\\n14 8\\n4 5\\n14 11\\n12 7\\n8 14\\n3 14\\n11 1\\n1 4\\n6 11\\n\",\n    \"14 27\\n1 13\\n10 12\\n12 11\\n10 9\\n13 3\\n3 11\\n5 10\\n3 10\\n10 5\\n5 12\\n1 6\\n5 8\\n6 9\\n11 13\\n3 1\\n9 12\\n9 9\\n7 3\\n7 6\\n6 10\\n3 9\\n13 13\\n5 5\\n2 10\\n8 10\\n4 13\\n11 3\\n\",\n    \"999999999 1\\n999999999 999999999\\n\",\n    \"999999999 1\\n999999999 999999999\\n\",\n    \"999999999 1\\n999999998 999999999\\n\",\n    \"3 3\\n1 2\\n3 3\\n1 3\\n\",\n    \"999999998 2\\n2 1\\n999999996 999999998\\n\",\n    \"999999998 4\\n2 1\\n1 2\\n999999997 999999996\\n2 2\\n\",\n    \"999999998 4\\n999999996 999999996\\n999999997 999999998\\n2 2\\n1 2\\n\",\n    \"999999997 5\\n2 1\\n999999997 999999994\\n999999997 999999995\\n999999994 999999996\\n3 3\\n\",\n    \"999999997 2\\n1 2\\n999999995 999999994\\n\",\n    \"999999997 10\\n999999997 999999996\\n2 3\\n999999996 999999996\\n999999996 999999997\\n2 2\\n999999996 999999994\\n999999995 999999997\\n1 3\\n3 1\\n999999995 999999996\\n\",\n    \"999999996 6\\n1 2\\n999999996 999999992\\n999999996 999999995\\n3 3\\n999999996 999999993\\n2 3\\n\",\n    \"999999996 9\\n4 3\\n999999994 999999992\\n2 1\\n4 1\\n999999993 999999992\\n4 4\\n999999994 999999994\\n999999992 999999994\\n999999994 999999993\\n\",\n    \"999999996 19\\n3 4\\n4 4\\n3 3\\n999999994 999999995\\n999999995 999999995\\n999999996 999999993\\n1 2\\n999999992 999999996\\n999999993 999999994\\n999999996 999999995\\n999999993 999999996\\n2 2\\n1 4\\n999999995 999999992\\n2 1\\n999999996 999999992\\n4 3\\n4 2\\n999999995 999999994\\n\",\n    \"999999995 4\\n3 4\\n999999991 999999990\\n3 1\\n999999991 999999994\\n\",\n    \"3 2\\n2 1\\n3 3\\n\",\n    \"999999995 15\\n999999990 999999993\\n999999992 999999994\\n999999991 999999993\\n4 1\\n5 5\\n999999993 999999990\\n999999994 999999991\\n3 1\\n1 5\\n3 5\\n999999993 999999991\\n999999991 999999994\\n4 3\\n999999990 999999992\\n3 2\\n\",\n    \"999999995 4\\n1 2\\n999999994 999999995\\n5 1\\n999999990 999999994\\n\",\n    \"999999994 2\\n999999988 999999988\\n3 2\\n\",\n    \"999999994 6\\n1 6\\n6 6\\n2 3\\n999999990 999999990\\n999999990 999999994\\n999999992 999999990\\n\",\n    \"999999994 1\\n999999991 999999989\\n\",\n    \"999999993 7\\n5 7\\n999999986 999999986\\n999999990 999999986\\n6 4\\n999999986 999999987\\n999999986 999999989\\n4 6\\n\",\n    \"999999993 8\\n999999990 999999991\\n999999988 999999986\\n3 6\\n1 2\\n2 6\\n999999988 999999990\\n4 1\\n999999986 999999988\\n\",\n    \"999999993 17\\n5 6\\n999999987 999999992\\n999999986 999999992\\n7 2\\n7 1\\n6 3\\n7 4\\n1 4\\n7 6\\n999999991 999999988\\n999999990 999999991\\n999999990 999999990\\n999999993 999999993\\n999999989 999999992\\n999999992 999999992\\n999999992 999999993\\n4 2\\n\",\n    \"999999992 13\\n2 3\\n2 6\\n3 6\\n4 6\\n5 5\\n6 7\\n999999985 999999989\\n999999986 999999987\\n999999986 999999990\\n999999988 999999985\\n999999989 999999987\\n999999990 999999986\\n999999990 999999989\\n\",\n    \"999999992 28\\n999999990 999999989\\n999999991 999999985\\n1 5\\n2 7\\n4 8\\n5 8\\n4 5\\n999999987 999999984\\n999999988 999999984\\n7 5\\n999999991 999999987\\n4 3\\n999999989 999999990\\n7 2\\n2 4\\n999999990 999999987\\n5 3\\n4 6\\n6 1\\n999999989 999999985\\n999999985 999999987\\n1 4\\n999999992 999999991\\n999999992 999999989\\n999999984 999999992\\n999999988 999999985\\n999999990 999999986\\n999999988 999999989\\n\",\n    \"4 5\\n2 3\\n4 3\\n3 3\\n2 4\\n1 2\\n\",\n    \"999999992 29\\n7 7\\n999999989 999999988\\n999999991 999999988\\n999999988 999999986\\n999999989 999999984\\n999999986 999999990\\n8 3\\n999999987 999999985\\n5 4\\n8 4\\n6 3\\n3 5\\n999999991 999999991\\n999999986 999999987\\n999999990 999999988\\n999999984 999999991\\n4 3\\n999999985 999999985\\n7 2\\n8 6\\n999999987 999999986\\n999999990 999999985\\n1 7\\n1 8\\n6 8\\n4 8\\n999999990 999999986\\n999999992 999999992\\n2 8\\n\",\n    \"999999991 16\\n999999987 999999990\\n9 4\\n999999990 999999990\\n999999991 999999988\\n5 2\\n4 1\\n999999985 999999988\\n8 7\\n999999985 999999983\\n999999990 999999986\\n4 6\\n999999983 999999987\\n1 5\\n8 4\\n6 3\\n999999985 999999987\\n\",\n    \"999999991 20\\n999999985 999999984\\n3 3\\n999999984 999999989\\n9 1\\n1 6\\n8 9\\n6 4\\n3 5\\n999999982 999999990\\n999999991 999999985\\n999999987 999999990\\n5 7\\n2 7\\n999999986 999999983\\n9 5\\n999999988 999999986\\n8 6\\n999999982 999999988\\n999999982 999999985\\n999999983 999999989\\n\",\n    \"999999991 10\\n8 5\\n7 5\\n999999991 999999988\\n999999983 999999985\\n8 8\\n999999991 999999983\\n999999987 999999982\\n9 5\\n7 8\\n999999983 999999991\\n\",\n    \"999999990 6\\n5 8\\n1 7\\n999999986 999999981\\n999999984 999999985\\n999999981 999999988\\n8 3\\n\",\n    \"999999990 32\\n10 6\\n999999988 999999987\\n999999990 999999988\\n999999982 999999990\\n999999983 999999987\\n5 3\\n4 2\\n999999983 999999986\\n999999981 999999990\\n7 1\\n999999981 999999980\\n6 8\\n999999990 999999983\\n999999980 999999980\\n7 9\\n999999990 999999989\\n2 4\\n4 10\\n999999983 999999984\\n4 3\\n2 5\\n999999981 999999983\\n999999981 999999987\\n999999982 999999986\\n5 2\\n999999988 999999980\\n4 4\\n10 7\\n4 6\\n7 2\\n999999989 999999981\\n999999989 999999980\\n\",\n    \"999999989 13\\n7 5\\n999999989 999999978\\n10 8\\n999999987 999999986\\n2 10\\n999999978 999999981\\n7 9\\n999999980 999999982\\n9 11\\n999999984 999999983\\n7 1\\n999999986 999999978\\n999999985 999999980\\n\",\n    \"999999989 38\\n999999980 999999981\\n10 8\\n2 5\\n999999978 999999981\\n999999978 999999985\\n7 9\\n8 10\\n9 10\\n999999984 999999980\\n6 6\\n999999985 999999986\\n999999982 999999978\\n999999981 999999987\\n8 5\\n999999982 999999980\\n999999989 999999980\\n999999988 999999983\\n999999982 999999984\\n10 9\\n6 2\\n999999980 999999979\\n6 9\\n9 9\\n999999983 999999980\\n1 7\\n9 3\\n999999988 999999989\\n999999984 999999981\\n999999984 999999987\\n9 11\\n9 6\\n999999986 999999980\\n3 7\\n2 4\\n999999979 999999986\\n10 4\\n11 7\\n3 4\\n\",\n    \"999999989 37\\n999999986 999999989\\n999999980 999999989\\n999999988 999999978\\n8 2\\n4 1\\n6 4\\n999999980 999999983\\n999999985 999999984\\n999999979 999999978\\n8 1\\n6 6\\n999999982 999999981\\n999999987 999999988\\n6 5\\n7 8\\n2 3\\n999999983 999999989\\n6 8\\n4 2\\n9 8\\n999999988 999999988\\n999999981 999999987\\n999999988 999999983\\n999999984 999999981\\n11 11\\n999999986 999999987\\n999999984 999999986\\n999999988 999999981\\n999999978 999999982\\n1 8\\n5 9\\n999999984 999999982\\n4 8\\n2 7\\n8 4\\n8 7\\n6 11\\n\",\n    \"4 2\\n2 1\\n1 3\\n\",\n    \"999999988 20\\n999999980 999999988\\n6 4\\n3 10\\n999999979 999999976\\n11 9\\n1 6\\n999999983 999999983\\n3 4\\n1 2\\n999999979 999999982\\n999999979 999999987\\n9 6\\n4 4\\n10 8\\n999999981 999999981\\n999999987 999999983\\n999999980 999999980\\n999999978 999999980\\n999999986 999999978\\n11 8\\n\",\n    \"999999988 4\\n10 5\\n999999984 999999984\\n999999984 999999982\\n6 11\\n\",\n    \"5 7\\n4 4\\n1 2\\n5 3\\n1 3\\n2 4\\n5 1\\n2 2\\n\",\n    \"5 2\\n3 2\\n3 4\\n\",\n    \"6 6\\n5 1\\n5 4\\n2 1\\n5 3\\n6 2\\n6 4\\n\",\n    \"1000000000 1\\n500000000 500000000\\n\",\n    \"4 9\\n3 1\\n4 1\\n4 2\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\",\n    \"6 8\\n1 2\\n1 3\\n3 1\\n3 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\",\n    \"2 3\\n1 2\\n2 1\\n2 2\\n\",\n    \"2 1\\n2 2\\n\",\n    \"6 14\\n6 4\\n4 6\\n4 3\\n2 3\\n2 4\\n2 6\\n6 5\\n2 2\\n3 6\\n4 1\\n2 1\\n5 2\\n4 5\\n5 3\\n\",\n    \"6 6\\n5 3\\n4 4\\n3 5\\n2 6\\n3 1\\n2 2\\n\",\n    \"4 4\\n1 3\\n2 2\\n3 2\\n4 3\\n\",\n    \"6 7\\n6 3\\n5 2\\n1 2\\n2 5\\n4 3\\n3 4\\n3 2\\n\",\n    \"6 7\\n2 1\\n2 2\\n2 3\\n2 4\\n5 4\\n5 5\\n5 6\\n\",\n    \"5 5\\n1 2\\n2 2\\n3 2\\n4 2\\n5 4\\n\",\n    \"5 4\\n1 3\\n2 1\\n2 2\\n2 3\\n\",\n    \"4 3\\n2 1\\n3 1\\n4 1\\n\",\n    \"5 6\\n1 2\\n2 2\\n3 2\\n3 4\\n4 4\\n5 4\\n\",\n    \"5 5\\n2 1\\n2 2\\n4 3\\n4 4\\n4 5\\n\",\n    \"5 5\\n1 2\\n2 2\\n3 2\\n4 4\\n5 4\\n\",\n    \"5 5\\n2 1\\n2 2\\n2 3\\n2 4\\n4 5\\n\",\n    \"6 7\\n3 2\\n2 3\\n1 4\\n6 2\\n5 3\\n4 4\\n3 5\\n\",\n    \"5 9\\n2 1\\n2 2\\n2 3\\n3 1\\n3 3\\n4 2\\n4 3\\n4 4\\n4 5\\n\",\n    \"6 7\\n1 2\\n2 2\\n4 1\\n4 2\\n4 3\\n4 4\\n3 4\\n\",\n    \"6 10\\n1 5\\n2 1\\n2 2\\n2 3\\n2 5\\n3 5\\n4 2\\n4 3\\n4 4\\n4 5\\n\",\n    \"4 4\\n2 1\\n3 2\\n2 3\\n2 4\\n\",\n    \"9 9\\n1 7\\n2 6\\n3 5\\n4 8\\n5 7\\n6 6\\n7 5\\n8 6\\n9 7\\n\",\n    \"10 5\\n2 1\\n1 3\\n2 3\\n3 3\\n4 2\\n\",\n    \"5 6\\n2 1\\n2 2\\n2 3\\n4 5\\n4 4\\n4 3\\n\",\n    \"4 4\\n2 3\\n3 2\\n3 4\\n4 1\\n\",\n    \"10 7\\n10 4\\n9 5\\n8 6\\n7 7\\n6 8\\n8 9\\n7 10\\n\"\n  ],\n  \"outputs\": [\n    \"6\\n\",\n    \"12\\n\",\n    \"-1\\n\",\n    \"1999999998\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"2\\n\",\n    \"10\\n\",\n    \"12\\n\",\n    \"12\\n\",\n    \"14\\n\",\n    \"14\\n\",\n    \"16\\n\",\n    \"16\\n\",\n    \"18\\n\",\n    \"-1\\n\",\n    \"20\\n\",\n    \"-1\\n\",\n    \"20\\n\",\n    \"22\\n\",\n    \"22\\n\",\n    \"24\\n\",\n    \"24\\n\",\n    \"26\\n\",\n    \"26\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"1999999996\\n\",\n    \"-1\\n\",\n    \"1999999994\\n\",\n    \"-1\\n\",\n    \"1999999994\\n\",\n    \"1999999992\\n\",\n    \"1999999992\\n\",\n    \"-1\\n\",\n    \"1999999990\\n\",\n    \"1999999990\\n\",\n    \"-1\\n\",\n    \"1999999988\\n\",\n    \"-1\\n\",\n    \"1999999988\\n\",\n    \"1999999988\\n\",\n    \"1999999986\\n\",\n    \"1999999986\\n\",\n    \"1999999986\\n\",\n    \"1999999984\\n\",\n    \"1999999984\\n\",\n    \"-1\\n\",\n    \"1999999982\\n\",\n    \"1999999982\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"1999999980\\n\",\n    \"1999999980\\n\",\n    \"1999999980\\n\",\n    \"1999999978\\n\",\n    \"1999999978\\n\",\n    \"1999999976\\n\",\n    \"1999999976\\n\",\n    \"1999999976\\n\",\n    \"6\\n\",\n    \"1999999974\\n\",\n    \"1999999974\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"10\\n\",\n    \"1999999998\\n\",\n    \"6\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"6\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\"\n  ]\n}",
    "tags": [
        "reasoning/coding"
    ]
}