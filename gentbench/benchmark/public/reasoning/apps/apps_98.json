{
    "problem": "You are an expert Python programmer, and here is your task: Enough is enough. Too many times it happened that Vasya forgot to dispose of garbage and his apartment stank afterwards. Now he wants to create a garbage disposal plan and stick to it.\n\nFor each of next $n$ days Vasya knows $a_i$ \u2014 number of units of garbage he will produce on the $i$-th day. Each unit of garbage must be disposed of either on the day it was produced or on the next day. Vasya disposes of garbage by putting it inside a bag and dropping the bag into a garbage container. Each bag can contain up to $k$ units of garbage. It is allowed to compose and drop multiple bags into a garbage container in a single day.\n\nBeing economical, Vasya wants to use as few bags as possible. You are to compute the minimum number of bags Vasya needs to dispose of all of his garbage for the given $n$ days. No garbage should be left after the $n$-th day.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $k$ ($1 \\le n \\le 2\\cdot10^5, 1 \\le k \\le 10^9$) \u2014 number of days to consider and bag's capacity. The second line contains $n$ space separated integers $a_i$ ($0 \\le a_i \\le 10^9$) \u2014 the number of units of garbage produced on the $i$-th day.\n\n\n-----Output-----\n\nOutput a single integer \u2014 the minimum number of bags Vasya needs to dispose of all garbage. Each unit of garbage should be disposed on the day it was produced or on the next day. No garbage can be left after the $n$-th day. In a day it is allowed to compose and drop multiple bags.\n\n\n-----Examples-----\nInput\n3 2\n3 2 1\n\nOutput\n3\n\nInput\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\nOutput\n5000000000\n\nInput\n3 2\n1 0 1\n\nOutput\n2\n\nInput\n4 4\n2 8 4 1\n\nOutput\n4",
    "solution": "[\"n,k=list(map(int,input().split()))\\narr=list(map(int,input().split()))\\nans=arr[0]//k\\nval=arr[0]%k\\nfor i in range(1,n):\\n    if(val==0):\\n        ans+=arr[i]//k\\n        val=arr[i]%k\\n    else:\\n        val+=arr[i]\\n        if(val<k):\\n            val=0\\n            ans+=1\\n        else:\\n            ans+=val//k\\n            val=val%k\\nif(val!=0):\\n    ans+=1\\nprint(ans)\\n\", \"from math import ceil\\nn, k = list(map( int, input().split() ))\\na = [ 0 ] + list( map( int, input().split() ) )\\n\\nlast = 0\\nbags = 0\\nfor i in range( n + 1 ):\\n    if i == n:\\n        last += a[ i ]\\n        bags += ceil( last / k )\\n    else:\\n        b = ceil( last / k )\\n        bags += b\\n        l = b * k - last\\n        last = a[ i ] - min( a[ i ], l )\\n\\nprint( bags )\\n\\n\", \"n,k=[int(x) for x in input().split()]\\na=[int(x) for x in input().split()]\\nans=0\\npre=0\\nfor i in range(n):\\n    if pre!=0:\\n        ans+=1\\n        a[i]-=(k-pre)\\n        if a[i]<0:a[i]=0\\n    ans+=a[i]//k\\n    pre=a[i]-a[i]//k*k\\nif pre!=0 : ans+=1\\nprint(ans)\", \"n, k = map(int, input().split())\\nl = [*map(int, input().split())]\\nc = 0\\nres = 0\\nfor i, e in enumerate(l):\\n    if (e + c) < k and c > 0:\\n        res += int((e + c) > 0)\\n        c = 0\\n    else:\\n        res += (e + c) // k\\n        c = (e + c) % k\\nif c > 0: res += 1\\nprint(res)\", \"import math as ma\\nimport sys\\nfrom decimal import Decimal as dec\\nfrom itertools import permutations\\n\\ndef li():\\n\\treturn list(map(int , input().split()))\\n\\ndef num():\\n\\treturn map(int , input().split())\\n\\ndef nu():\\n\\treturn int(input())\\n\\ndef find_gcd(x , y):\\n\\twhile (y):\\n\\t\\tx , y = y , x % y\\n\\treturn x\\n\\nn,k=num()\\na=li()\\nz=0\\nx=0\\nfor i in range(n):\\n\\tif(z%k==0):\\n\\t\\tx+=int(ma.ceil(z/k))+a[i]//k\\n\\t\\tz = a[i] % k\\n\\telse:\\n\\t\\tcp=z%k\\n\\t\\tzz=a[i]-(k-cp)\\n\\t\\tif(zz<0):\\n\\t\\t\\tzz=0\\n\\t\\tx+=int(ma.ceil(z/k))+zz//k\\n\\t\\tz=zz%k\\nif(z>0):\\n\\tx+=1\\nprint(x)\", \"from math import floor\\nn,k=map(int,input().split())\\na=list(map(int,input().split()))\\nans=0\\ni=0\\nrem=0\\nwhile i<n:\\n    if i<n-1:\\n        if a[i]+rem<=k and rem!=0:\\n            ans+=1\\n            i+=1\\n            rem=0\\n        else:\\n            ans+=floor((a[i]+rem)/k)\\n            rem=(a[i]+rem)%k\\n            i+=1\\n    elif i==n-1:\\n        ans+=floor((a[i]+rem)/k)\\n        rem=(a[i]+rem)%k\\n        i+=1\\nif rem!=0:\\n    ans+=1\\nprint(ans)\", \"n, k = [int(x) for x in input().split()]\\na = [int(x) for x in input().split()]\\np = 0\\ncp = 0\\nsdg = 0\\nfdg = 0\\ntg = 0\\nfplp = 0\\nfor d in range(n-1):\\n    fdg = a[d]\\n    cp = sdg // k + (0 if sdg % k == 0 else 1)\\n    fplp = k - sdg % k\\n    if fplp == k:\\n        fplp = 0\\n    fdg -= min(fplp, fdg)\\n    cp += fdg // k\\n    fdg -= (fdg // k) * k\\n    p += cp\\n    sdg = fdg\\nfdg = a[n-1]\\np += (sdg + fdg) // k + (0 if (sdg + fdg) % k == 0 else 1)\\nprint(p)\\n\", \"n,k = list(map(int,input().split()))\\narr = list(map(int,input().split()))\\nprev = 0;\\nbags = 0;\\nfor i in range(n):\\n\\tif (arr[i]+prev)//k == 0:\\n\\t\\tif prev > 0:\\n\\t\\t\\tbags+=1;\\n\\t\\t\\tprev=0;\\n\\t\\telse:\\n\\t\\t\\tprev = arr[i];\\n\\telse:\\n\\t\\tbags += (arr[i]+prev)//k;\\n\\t\\tprev = (arr[i]+prev)%k\\nif prev!=0:\\n\\tbags+=1\\nprint(bags)\\n\\n\\n\", \"import math\\nn,k=[int(s) for s in input().split()]\\n\\na=[int(s) for s in input().split()]\\n\\ndef check():\\n    n=len(a)\\n    res=0\\n    sum0=0\\n    for i in range(n):\\n        res0=res\\n        if res==0 :\\n            if a[i]<k:\\n                res=a[i]\\n                if i==n-1 and a[i]!=0:\\n                    sum0+=1\\n            else:\\n                if i==n-1:\\n                    sum0+=math.ceil((a[i])/k)\\n                else:\\n                    sum0 += int((a[i]) / k)\\n                res=a[i]%k\\n        else:\\n            if i == n - 1:\\n                sum0+=math.ceil((a[i]+res)/k)\\n            else:\\n                sum0 += max(int((a[i] + res) / k),1)\\n            #print(res, max(int((a[i] + res) / k), 1))\\n            res = (a[i] + res) % k if a[i] + res >= k else 0\\n        #print(res0,sum0)\\n    print(sum0)\\n\\ncheck()\", \"n, k = [int(x) for x in input().split()]\\nlst = [int(x) for x in input().split()]\\nx=0\\ns=0\\nans=0\\nfor i in range(n):\\n        if x==0:\\n                s+=lst[i]\\n                ans+=(s//k)\\n                s=s%k\\n                if s>0: x=1\\n        elif x==1:\\n                if (s+lst[i]<k):\\n                        ans+=1\\n                        s=0\\n                        x=0\\n                else:\\n                        s+=lst[i]\\n                        ans+=s//k\\n                        s=s%k\\n                        if s>0: x=1\\n                        else: x = 0\\n        #print(s,ans)\\n                        \\n                        \\nif(s>0):\\n        print(ans+1)\\nelse:\\n        print(ans)\\n                \\n\", \"n, m = map(int, input().split())\\n\\na = list(map(int, input().split()))\\n\\nres = 0\\nsum = 0\\ncan = True\\n\\nfor i in range(n):\\n    if sum > 0:\\n        sum = sum + a[i]\\n        if sum < m:\\n            res = res + 1\\n            sum = 0\\n        else:\\n            res = res + sum // m\\n            sum = sum % m\\n    else:\\n        sum = sum + a[i]\\n        res = res + sum // m\\n        sum = sum % m\\n        \\nif sum > 0:\\n    res = res + 1\\nprint(res)\", \"n,k =list(map(int,input().split()))\\n\\na=[int(x) for x in input().split()]\\nbag=a[0]//k\\nremain=a[0]%k\\nfor i in range(1,n):\\n    tk=a[i]+remain\\n    remain=tk%k\\n    if remain>a[i]:\\n        bag+=1\\n        remain=0\\n    else:\\n        bag+=tk//k\\n    \\nif remain==0:\\n    print(bag)\\n   \\n        \\nelse:  \\n        \\n    print(bag+1)        \\n\", \"def read():\\n    return list(map(int, input().split()))\\n\\ndef solve(n, k, A):\\n    ans, prev = 0, 0\\n    for a in A:\\n        total = prev + a\\n        if prev and total < k:\\n            ans += 1\\n            total = 0\\n        elif total >= k:\\n            ans += total // k\\n            total %= k\\n        prev = total        \\n    ans += prev // k\\n    ans += 1 if prev % k > 0 else 0\\n    return ans\\n\\nn, k = read()\\nA = read()\\nprint(solve(n, k, A))\", \"import math\\nn,k=map(int,input().split(\\\" \\\"))\\nplan=list(input().split())\\nplan=[int(x) for x in plan]\\ncount=0\\ntemp=0\\nfor i in range(len(plan)):\\n    if i==n-1:\\n        if temp==0:\\n            count+=math.ceil(plan[i]/k)\\n            break\\n        else:\\n            plan[i]-=(k-temp)\\n            count+=1\\n            temp=0\\n            if plan[i]<0:\\n                plan[i]=0\\n            count+=math.ceil(plan[i]/k)\\n            break\\n    if temp!=0:\\n        plan[i]-=(k-temp)\\n        count+=1\\n        temp=0\\n        if plan[i]<0:\\n            plan[i]=0\\n    count+=int(plan[i]/k)\\n    temp=plan[i]%k\\nprint(int(count))\", \"v = []\\nn,k = list(map(int, input().split()))\\ns = 0\\nv = [int(x) for x in input().split()]\\nq = 0\\ncarry = 0\\nfor i in range(len(v)):\\n    prev_carry = carry\\n    garbage = v[i] + carry\\n    boxes = garbage // k\\n    carry = garbage % k\\n    if i > 0 and boxes == 0 and carry > 0 and prev_carry > 0:\\n        carry = 0\\n        boxes = 1\\n    q += boxes\\nif carry > 0:\\n    q += 1\\nprint(q)\\n\", \"n, k = list(map(int,input().split()))\\na = [int(x) for x in input().split()]\\nres = 0\\nfor i in range(1, n):\\n\\ts = a[i - 1] + a[i]\\n\\tq = s // k\\n\\tres += q\\n\\n\\tif q == 0 and a[i - 1] != 0:\\n\\t\\tres += 1\\n\\t\\ta[i] = 0\\n\\telse:\\n\\t\\ta[i] = a[i] - (q * k - a[i - 1])\\nres += (a[n - 1] + k - 1) // k\\nprint(res)\\n\", \"n,k = list(map(int, input().split()))\\ns = list(map(int,input().split()))\\n\\nold = 0\\ncurrent = 0\\nidx = 0\\nans = 0\\nwhile idx < len(s):\\n    if(old != 0 and s[idx] // k == 0):\\n        ans+= 1\\n        old = max(s[idx] - (k-old),0)\\n        idx+=1\\n        continue\\n    ans += (s[idx]+old) // k\\n    old = (s[idx]+old) % k\\n    idx+=1\\nif(old>0):\\n    ans+=1\\nprint(ans)\\n\", \"n, k = map(int, input().split())\\na = list(map(int, input().split()))\\nans = 0\\nfor i in range(0, len(a) - 1):\\n    \\n    ans += a[i] // k\\n    ans += int((a[i] % k) != 0)\\n    a[i + 1] += a[i] % k\\n    a[i + 1] = max(a[i + 1] - int((a[i] % k) != 0) * k, 0)\\nans += a[len(a) - 1] // k + int(a[-1] % k != 0)\\nprint(ans)\", \"\\n\\n\\nn, k = list(map(int, input().split()))\\ndays = list(map(int, input().split()))\\n\\nnb_bags=0\\ncrt_cap=0\\nfor i in range(n):\\n\\tif crt_cap !=0:\\n\\t\\tdays[i] = max(days[i]-(k-crt_cap), 0)\\n\\t\\tcrt_cap = 0\\n\\t\\tnb_bags += 1\\n\\tnb_bags += int(days[i]/k)\\n\\tcrt_cap = days[i]%k\\n\\nif crt_cap !=0:\\n\\tnb_bags += 1\\n\\nprint(nb_bags)\\n\\t\\n\\n\\n\", \"n, k = list(map(int, input().split()))\\na = [0] + list(map(int, input().split()))\\na.append(0)\\nans = 0\\nfor i in range(1, n + 2):\\n    t = (a[i - 1] + a[i]) // k\\n    if t > 0:\\n        ans += t\\n        t = (t * k) - a[i - 1]\\n        a[i] -= t\\n    else:\\n        if a[i - 1] > 0:\\n            ans += 1\\n            a[i] = 0\\nprint(ans)\\n\", \"n,k = list(map(int,input().split()))\\na = list(map(int,input().split()))+[0]\\nans = 0\\nr = 0\\nfor i in range(n-1,-1,-1):\\n    s = a[i]\\n    s = max(0,a[i]-r)\\n    x = (s+k-1)//k\\n    ans+=x\\n    r = x*k-s\\n    \\nprint(ans)\\n        \\n        \\n\", \"from math import ceil\\n\\nn, k = tuple(map(int, input().split()))\\na = list(map(int, input().split()))\\ns = 0\\nr = 0\\nfor i in range(n - 1, -1, -1):\\n    a[i] = max(0, a[i] - r)\\n    s += int(ceil(a[i] / k))\\n    if (a[i] % k) != 0:\\n        r = k - (a[i] % k)\\n    else:\\n        r = 0\\nprint(s)\\n\", \"n, k = map(int, input().split())\\nl =  [*map(int, input().split())]\\nc = 0\\nres = 0\\n\\nfor i,val in enumerate(l):\\n    if (val + c) < k and c > 0:\\n        res += int((val+c)>0)\\n        c = 0\\n    else:\\n        res += (val+c)//k\\n        c = (val+c)%k\\nif c > 0: res += 1\\nprint(res)\", \"n, k = map(int, input().split())\\n\\nr = 0\\nm = 0\\n\\nfor i in input().split():\\n  a = int(i) + m\\n  if (a < k):\\n    if (m != 0):\\n      r += 1\\n      m = 0\\n    else:\\n      m = a\\n  \\n  else:\\n    r += a // k\\n    m = a % k\\n\\nr += (m + k - 1) // k\\nprint(r)\", \"n,k = map(int, input().split())\\na = [0]+list(map(int, input().split()))\\na.append(0)\\nbag = 0\\nfor i in range(1, n + 2):\\n    t = (a[i-1]+a[i])//k\\n    if(t>0):\\n        bag += t\\n        t = (t*k)-a[i-1]\\n        a[i] -= t\\n    else:\\n        if(a[i-1]>0):\\n            bag += 1\\n            a[i] = 0\\nprint(bag)\"]",
    "test": "{\n  \"inputs\": [\n    \"3 2\\n3 2 1\\n\",\n    \"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\",\n    \"3 2\\n1 0 1\\n\",\n    \"4 4\\n2 8 4 1\\n\",\n    \"1 1\\n0\\n\",\n    \"1 1\\n1\\n\",\n    \"4 5\\n5 5 5 5\\n\",\n    \"5 2\\n3 1 0 3 1\\n\",\n    \"3 2\\n1 0 0\\n\",\n    \"3 2\\n0 0 1\\n\",\n    \"161 5\\n17 0 3 8 4 8 8 14 15 7 5 17 2 5 7 1 3 16 5 13 6 15 12 15 18 1 0 13 19 18 4 11 13 7 7 1 3 15 15 10 4 14 3 3 10 10 12 1 2 14 4 1 8 19 0 11 2 11 16 7 4 4 17 16 9 17 6 10 5 16 4 6 7 0 1 9 10 15 12 19 17 5 4 4 16 19 7 9 17 11 1 0 0 13 14 4 15 10 4 7 15 13 6 3 8 14 15 13 19 17 7 19 10 5 10 17 16 2 5 9 16 16 9 3 6 8 19 0 1 18 6 17 3 17 6 12 6 16 6 6 3 14 5 16 15 9 0 12 10 5 4 8 16 15 11 14 6 13 6 3 1\\n\",\n    \"136 2\\n11 13 12 17 7 16 15 2 19 12 17 10 4 17 1 6 14 3 9 6 6 13 14 1 15 15 2 14 9 2 18 9 0 3 8 4 3 11 10 8 9 6 2 17 18 2 5 1 6 15 7 12 11 9 8 10 5 18 13 5 19 7 18 19 14 10 17 17 13 6 9 10 12 6 0 3 14 15 3 7 18 5 7 14 3 2 9 14 11 4 15 3 18 9 15 6 16 13 5 5 0 19 1 5 14 19 11 16 12 4 15 19 1 14 5 16 18 4 17 10 5 5 17 6 1 5 11 12 4 8 14 3 17 18 18 10\\n\",\n    \"110 2\\n6 14 13 14 2 17 2 11 4 16 17 4 14 9 2 10 5 10 13 8 14 11 7 14 12 10 11 15 0 19 19 19 15 19 1 18 4 16 4 13 2 18 0 11 17 14 9 1 11 16 9 14 1 8 16 9 8 17 10 16 6 18 8 3 18 14 15 15 1 15 14 14 6 11 11 8 9 7 13 14 19 14 17 3 10 13 19 0 13 6 17 6 4 6 16 15 10 3 18 10 18 4 4 8 8 4 19 19 17 11\\n\",\n    \"185 2\\n0 14 2 11 5 17 9 11 8 12 8 17 17 0 4 15 4 17 8 1 2 10 8 0 8 16 1 7 10 4 0 18 2 15 2 1 4 1 10 11 6 10 19 5 5 18 2 1 15 17 0 4 12 19 12 8 11 4 7 15 13 0 9 6 2 6 5 2 17 4 7 9 11 17 1 13 4 6 4 10 1 14 0 13 17 16 10 5 7 19 19 9 2 2 17 17 11 6 11 15 4 17 18 18 14 9 15 10 10 10 14 18 2 5 8 4 3 2 12 3 14 4 12 19 18 13 14 12 9 5 15 17 9 12 1 5 15 13 13 5 19 5 3 2 2 13 9 8 0 8 12 16 10 4 7 19 0 5 6 17 13 15 14 6 3 2 18 11 15 9 6 0 3 3 17 5 10 15 6 15 13 2 16 19 10\\n\",\n    \"159 2\\n14 7 11 8 0 5 16 0 4 17 8 10 7 12 6 0 15 4 12 15 10 8 9 13 5 11 2 8 1 1 1 8 17 10 15 15 4 6 4 9 11 11 18 11 5 10 14 8 19 18 2 14 14 18 1 7 14 12 4 6 9 3 19 10 6 19 16 1 5 14 12 13 17 3 12 6 8 18 14 17 2 14 2 3 4 7 0 11 0 13 12 13 0 18 18 6 4 8 12 13 2 3 1 1 8 1 3 14 3 17 1 18 12 14 4 3 5 17 4 3 3 14 7 1 13 10 6 4 12 3 4 11 3 13 4 3 18 10 15 12 0 19 19 6 18 17 7 1 11 18 12 13 13 3 1 11 18 11 15\\n\",\n    \"2 3\\n2 7\\n\",\n    \"3 6\\n2 3 3\\n\",\n    \"4 4\\n3 6 2 3\\n\",\n    \"7 16\\n44 3 9 12 3 1 24\\n\",\n    \"1 1\\n10\\n\",\n    \"1 10\\n1\\n\",\n    \"1 10\\n2\\n\",\n    \"1 10\\n0\\n\",\n    \"3 10\\n0 5 5\\n\",\n    \"3 10\\n5 5 0\\n\",\n    \"3 10\\n5 0 5\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n\",\n    \"5000000000\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"301\\n\",\n    \"671\\n\",\n    \"596\\n\",\n    \"846\\n\",\n    \"722\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"7\\n\",\n    \"10\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\"\n  ]\n}",
    "tags": [
        "reasoning/coding"
    ]
}