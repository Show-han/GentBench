{
    "problem": "You are an expert Python programmer, and here is your task: Efim just received his grade for the last test. He studies in a special school and his grade can be equal to any positive decimal fraction. First he got disappointed, as he expected a way more pleasant result. Then, he developed a tricky plan. Each second, he can ask his teacher to round the grade at any place after the decimal point (also, he can ask to round to the nearest integer). \n\nThere are t seconds left till the end of the break, so Efim has to act fast. Help him find what is the maximum grade he can get in no more than t seconds. Note, that he can choose to not use all t seconds. Moreover, he can even choose to not round the grade at all.\n\nIn this problem, classic rounding rules are used: while rounding number to the n-th digit one has to take a look at the digit n + 1. If it is less than 5 than the n-th digit remain unchanged while all subsequent digits are replaced with 0. Otherwise, if the n + 1 digit is greater or equal to 5, the digit at the position n is increased by 1 (this might also change some other digits, if this one was equal to 9) and all subsequent digits are replaced with 0. At the end, all trailing zeroes are thrown away.\n\nFor example, if the number 1.14 is rounded to the first decimal place, the result is 1.1, while if we round 1.5 to the nearest integer, the result is 2. Rounding number 1.299996121 in the fifth decimal place will result in number 1.3.\n\n\n-----Input-----\n\nThe first line of the input contains two integers n and t (1 \u2264 n \u2264 200 000, 1 \u2264 t \u2264 10^9)\u00a0\u2014 the length of Efim's grade and the number of seconds till the end of the break respectively.\n\nThe second line contains the grade itself. It's guaranteed that the grade is a positive number, containing at least one digit after the decimal points, and it's representation doesn't finish with 0.\n\n\n-----Output-----\n\nPrint the maximum grade that Efim can get in t seconds. Do not print trailing zeroes.\n\n\n-----Examples-----\nInput\n6 1\n10.245\n\nOutput\n10.25\n\nInput\n6 2\n10.245\n\nOutput\n10.3\n\nInput\n3 100\n9.2\n\nOutput\n9.2\n\n\n\n-----Note-----\n\nIn the first two samples Efim initially has grade 10.245. \n\nDuring the first second Efim can obtain grade 10.25, and then 10.3 during the next second. Note, that the answer 10.30 will be considered incorrect.\n\nIn the third sample the optimal strategy is to not perform any rounding at all.",
    "solution": "[\"def main():\\n    n, t = map(int, input().split())\\n    s = input()\\n    dot = s.find('.')\\n    for i in range(dot + 1, n):\\n        if s[i] > '4':\\n            break\\n    else:\\n        print(s)\\n        return\\n    while t:\\n        i -= 1\\n        t -= 1\\n        if s[i] < '4':\\n            break\\n    if i > dot:\\n        print(s[:i], chr(ord(s[i]) + 1), sep='')\\n        return\\n    else:\\n        l = list(s[dot - 1::-1])\\n        for i, c in enumerate(l):\\n            if c == '9':\\n                l[i] = '0'\\n            else:\\n                l[i] = chr(ord(c) + 1)\\n                break\\n        else:\\n            l.append('1')\\n    print(''.join(reversed(l)))\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"def main():\\n    n, t = map(int, input().split())\\n    s = input()\\n    dot = s.find('.')\\n    for i in range(dot + 1, n):\\n        if s[i] > '4':\\n            break\\n    else:\\n        print(s)\\n        return\\n    while t:\\n        i -= 1\\n        t -= 1\\n        if s[i] < '4':\\n            break\\n    if i > dot:\\n        print(s[:i], chr(ord(s[i]) + 1), sep='')\\n        return\\n    else:\\n        l = list(s[dot - 1::-1])\\n        for i, c in enumerate(l):\\n            if c == '9':\\n                l[i] = '0'\\n            else:\\n                l[i] = chr(ord(c) + 1)\\n                break\\n        else:\\n            l.append('1')\\n    print(''.join(reversed(l)))\\n\\n\\ndef __starting_point():\\n    main()\\n__starting_point()\", \"def solve():\\n    n, t = map(int, input().split())\\n    s = input()\\n    dot = s.find('.')\\n    for i in range(dot + 1, n):\\n        if s[i] > '4':\\n            break\\n    else:\\n        print(s)\\n        return\\n    while t:\\n        i -= 1\\n        t -= 1\\n        if s[i] < '4':\\n            break\\n    if i > dot:\\n        print(s[:i], chr(ord(s[i]) + 1), sep='')\\n        return\\n    else:\\n        l = list(s[dot - 1::-1])\\n        for i, c in enumerate(l):\\n            if c == '9':\\n                l[i] = '0'\\n            else:\\n                l[i] = chr(ord(c) + 1)\\n                break\\n        else:\\n            l.append('1')\\n\\n    print(''.join(reversed(l)))\\nsolve()\", \"(n, t) = [int(x) for x in input().split()]\\n(a, s) = input().split('.')\\n\\ns = list(s)\\n\\npos = len(s) - 1\\nfor i in range(len(s)):\\n\\tif ord(s[i]) > ord('4'):\\n\\t\\tpos = i\\n\\t\\tbreak\\n\\nwhile t > 0 and pos > 0:\\n\\tif ord(s[pos]) > ord('4'):\\n\\t\\tpos -= 1\\n\\t\\ts[pos] = chr(ord(s[pos]) + 1)\\n\\t\\tt -= 1\\n\\telse:\\n\\t\\tbreak\\n\\nif t > 0 and pos == 0 and s[0] > '4':\\n\\tit = len(a) - 1\\n\\tA = [ord(ch) - ord('0') for ch in a]\\n\\tA[it] += 1\\n\\twhile it > 0:\\n\\t\\tif A[it] == 10:\\n\\t\\t\\tA[it] = 0\\n\\t\\t\\tA[it - 1] += 1\\n\\t\\t\\tit -= 1\\n\\t\\telse:\\n\\t\\t\\tbreak\\n\\tres = \\\"\\\".join([str(x) for x in A])\\n\\tprint(res)\\nelse:\\n\\t\\n\\tres = a + '.' + \\\"\\\".join(s[:pos + 1])\\n\\t\\n\\tprint(res)\", \"def main():\\n    n,t = map(int,input().split())\\n    b = input()\\n    p = b.find('.')\\n    for i in range(p+1,n):\\n        if b[i]>'4':\\n            break\\n    else:\\n        print(b)\\n        return\\n\\n    while t:\\n        i-=1\\n        t-=1\\n        if b[i]<'4':\\n            break\\n    if i>p:\\n        print(b[:i], chr(ord(b[i])+1), sep = '')\\n    else:\\n        k = list(b[:i])\\n        for x in range(len(k)-1,-1,-1):\\n            if k[x] == '9':\\n                k[x] = '0'\\n            else:\\n                k[x] = chr(ord(k[x])+1)\\n                break\\n        else:\\n            k.insert(0,'1')\\n        print(''.join(k))\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"def main():\\n    n,t = list(map(int,input().split()))\\n    b = list(input())\\n    p = b.index('.')\\n\\n\\n    if int(b[p+1]) > 4:\\n        del b[p:n]\\n        b = list(b)\\n        for x in range(len(b)-1,-1,-1):\\n            if b[x] == '9':\\n                b[x] = '0'\\n            else:\\n                b[x] = chr(ord(b[x])+1)\\n                break\\n        else:\\n            b.insert(0,'1')\\n        print(''.join(b))\\n        return\\n    else:\\n        if p + 1 < n - 1:\\n            for x in range(p+1,n):\\n                if int(b[x+1]) > 4:\\n                    b[x] = chr(ord(b[x])+1)\\n                    del b[x+1:n]\\n                    t-=1\\n                    break\\n            else:\\n                print(''.join(b))\\n                return\\n            for y in range(x,p,-1):\\n                if int(b[y]) < 5 or t == 0:\\n                    break\\n                elif b[y-1] != '.':\\n                    b[y-1] = str(int(b[y-1])+1)\\n                    del b[y:n]\\n                    t-=1\\n                elif b[y-1] == '.': \\n                    del b[y-1:n]\\n                    b = list(b)\\n                    for x in range(len(b)-1,-1,-1):\\n                        if b[x] == '9':\\n                            b[x] = '0'\\n                        else:\\n                            b[x] = chr(ord(b[x])+1)\\n                            break\\n                    else:\\n                        b.insert(0,'1')\\n        b = ''.join(b)\\n    print(b)\\nmain()\\n\", \"#EFIM AND STRANGES GRADE 718A\\nimport sys\\nimport decimal\\na,b = map(int,input().split())\\nc = input()\\nclock = c.find(\\\".\\\")\\n\\nfor x in range(clock+1,a):\\n\\tif c[x] > '4': break\\nelse:\\n\\tprint(c)\\n\\treturn\\n\\n\\nwhile b:\\n\\tx -=1\\n\\tb -=1\\n\\tif c[x] != '4': break\\n\\t\\n\\t\\t\\t\\t\\nif x > clock:\\n\\tprint(c[:x],chr(ord(c[x])+1),sep=\\\"\\\")\\nelse:\\n\\tc = list(c[:x])\\n\\tx -= 1\\n\\twhile x>=0:\\n\\t\\tif c[x] == '9':\\n\\t\\t\\tc[x] = '0'\\n\\t\\t\\tx-=1\\n\\t\\telse:\\n\\t\\t\\tc[x] = chr(ord(c[x])+1)\\n\\t\\t\\tbreak\\n\\telse:\\n\\t\\tc.insert(0,'1')\\n\\tprint(\\\"\\\".join(c) )\\n\\t\\t\\n\", \"a,b = map(int,input().split())\\nc = input()\\nclock = c.find(\\\".\\\")\\n\\nfor x in range(clock+1,a):\\n\\tif c[x] > '4': break\\nelse:\\n\\tx=a\\n\\tprint(c)\\nif x != a:\\n\\twhile b:\\n\\t\\tx -=1\\n\\t\\tb -=1\\n\\t\\tif c[x] != '4': break\\t\\t\\t\\t\\n\\tif x > clock:\\n\\t\\tprint(c[:x],chr(ord(c[x])+1),sep=\\\"\\\")\\n\\telse:\\n\\t\\tc = list(c[:x])\\n\\t\\tx -= 1\\n\\t\\twhile x>=0:\\n\\t\\t\\tif c[x] == '9':\\n\\t\\t\\t\\tc[x] = '0'\\n\\t\\t\\t\\tx-=1\\n\\t\\t\\telse:\\n\\t\\t\\t\\tc[x] = chr(ord(c[x])+1)\\n\\t\\t\\t\\tbreak\\n\\t\\telse:\\n\\t\\t\\tc.insert(0,'1')\\n\\t\\tprint(\\\"\\\".join(c) )\\n\\t\\t\\n\", \"n, t = map(int, input().split())\\nx = input()\\ni = x.find('.')\\nfor j in range(i + 1, n):\\n    if x[j] > '4':\\n        for k in range(t):\\n            j -= 1\\n            if x[j] != '4': break\\n        if j == i:\\n            j -= 1\\n            while j and x[j] == '9': j -= 1\\n            x = x[:j] + str(int(x[j]) + 1) + '0' * (i - j - 1)\\n        else:\\n            x = x[:j] + str(int(x[j]) + 1)\\n        break\\nprint(x)\", \"n, t = map(int,input().split())\\ns = \\\"0\\\"+input()\\nf = s.find('.')\\nif f == -1:\\n\\tprint(s[1:])\\n\\treturn\\nr = list(s[:f]+s[f+1:])\\nfor i in range(f,len(r)):\\n\\tif r[i] >= \\\"5\\\" and r[i] <= \\\"9\\\":\\n\\t\\twhile r[i] >= \\\"5\\\" and r[i] <= \\\"9\\\":\\n\\t\\t\\tif i < f or t <= 0:\\n\\t\\t\\t\\tbreak\\n\\t\\t\\ti -= 1\\n\\t\\t\\tz = ord(r[i])+1\\n\\t\\t\\twhile z == ord(\\\"9\\\")+1:\\n\\t\\t\\t\\ti -= 1\\n\\t\\t\\t\\tz = ord(r[i])+1\\n\\t\\t\\t#print(r[i])\\n\\t\\t\\twhile len(r) != i+1:\\n\\t\\t\\t\\tr.pop()\\n\\t\\t\\tr[-1] = chr(z)\\n\\t\\t\\tt -= 1\\n\\t\\tbreak\\nif r[0] == '0':\\n\\tr = r[1:]\\n\\tf -= 1\\nr += ['0']*max(f-len(r),0)\\nif len(r) == f:\\n\\tprint(*r,sep='')\\nelse:\\n\\tprint(*r[:f],'.',*r[f:],sep='')\\n\", \"R = lambda: map(int, input().split())\\nn, t = R()\\ns = list(input())\\nr = -1\\nl = s.index('.') + 1\\nfor i in range(l, n):\\n    if s[i] >= '5':\\n        r = i\\n        break\\nfor i in range(r, max(l - 1, r - t), -1):\\n    if s[i] >= '5':\\n        if i - 1 != l - 1:\\n            s[i - 1] = str((int(s[i - 1]) + 1) % 10)\\n            r = i - 1\\n        else:\\n            s[i - 2] = str((int(s[i - 2]) + 1) % 10)\\n            r = l - 2\\n            if s[r] == '0':\\n                for j in range(r - 1, -1, -1):\\n                    if s[j] == '9':\\n                        s[j] = '0'\\n                    else:\\n                        s[j] = str((int(s[j]) + 1) % 10)\\n                        break\\n                if s[0] == '0':\\n                    s = ['1'] + s\\n                    r += 1\\nprint(''.join(s[:r + 1]) if r >= 0 else ''.join(s))\", \"def main():\\n    n, t = map(int,input().split())\\n    b = input()\\n    p = b.find('.')\\n    for i in range(p+1,n):\\n        if b[i] > '4':\\n            break\\n    else:\\n        print(b)\\n        return\\n    \\n    while t:\\n        i-=1\\n        t-=1\\n        if b[i] < '4':\\n            break\\n    \\n    if i > p:\\n        print(b[:i], chr(ord(b[i]) + 1), sep='')\\n    else:\\n        k = list(b[:i])\\n        for x in range(len(k) - 1, -1, -1):\\n            if k[x] == '9':\\n                k[x] = '0'\\n            else:\\n                k[x] = chr(ord(k[x]) + 1)\\n                break\\n        else:\\n            k.insert(0, '1')\\n        \\n        print(''.join(k))\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n, t = map(int, input().split())\\n\\ns = input()\\nind = s.find(\\\".\\\")\\n\\nfor i in range(ind+1, n):\\n    if s[i] > \\\"4\\\":\\n        break\\nelse:\\n    print(s)\\n    quit()\\n\\nwhile t:\\n    t -= 1\\n    i -= 1\\n    if s[i] < \\\"4\\\":\\n        break\\n\\nif i > ind:\\n    print(s[:i], chr(ord(s[i])+1), sep = \\\"\\\")\\nelse:\\n    t = list(s[:i])\\n    for i in range(len(t)-1, -1, -1):\\n        if t[i] == \\\"9\\\":\\n            t[i] = \\\"0\\\"\\n        else:\\n            t[i] = chr(ord(t[i])+1)\\n            break\\n    else:\\n        t.insert(0, \\\"1\\\")\\n\\n    print(\\\"\\\".join(t))\\n\", \"import sys\\nn, t = list(map(int,sys.stdin.readline().split()))\\nx = sys.stdin.readline()\\ny = x.find('.')\\nfor i in range(y+1,n):\\n    if x[i] > '4':\\n        for j in range(t):\\n            i -= 1\\n            if x[i] != '4': break\\n        if i == y:\\n            i -= 1\\n            while i and x[i] == '9':\\n                i -= 1\\n            x = x[:i] + str(int(x[i]) + 1) + '0' * (y - i - 1)\\n        else:\\n            x = x[:i] + str(int(x[i]) + 1)\\n        break\\nprint(x)\\n\\n    \\n\\n\", \"n,t=list(map(int,input().split()))\\ns=input()\\nans=[]\\nte=[]\\nfor i in range(len(s)):\\n    if(s[i]=='.'):\\n        for j in range(i+1,len(s)):\\n            ans.append(int(s[j]))\\n        break;\\n    te.append(int(s[i]))\\n    \\nflag=0\\nfor i in range(len(ans)):\\n    if(ans[i]>=5):\\n        flag=1\\n        break;\\nif(flag==0):\\n    print(s)\\n    return\\nans=ans[0:i+1]\\npre=[0 for i in range(len(ans))]\\nfor i in range(1,len(ans)):\\n    if(ans[i-1]>=5):\\n        pre[i]=pre[i-1]+1\\n    else:\\n        pre[i]=pre[i-1]\\n    \\nshrink=[0 for i in range(len(ans))]\\ncar=0\\nfor i in range(len(ans)-1,-1,-1):\\n    if(i==len(ans)-1):\\n        car=1\\n        shrink[i]=1\\n        t-=1\\n    else:\\n        if(car==1):\\n            ans[i]+=1\\n            \\n        if(ans[i]<5):\\n            car=0\\n            continue;\\n        elif(5<=ans[i]<=9):\\n            car=0\\n            if(pre[i]>0):\\n                continue;\\n            else:\\n                if(t==0):\\n                    car=0\\n                    break;\\n                else:\\n                    t-=1\\n                    shrink[i]=1\\n                    car=1\\n        else:\\n            shrink[i]=1\\n            car=1\\n    \\nif(car==1):\\n    for i in range(len(te)-1,-1,-1):\\n        if(te[i]==9 and i>0):\\n            te[i]=0\\n        elif(te[i]<9):\\n            te[i]+=1\\n            car=0\\n            break;\\nif(car==1):\\n    te=[1]+[0]*len(te)\\n\\nx=shrink.index(1)\\nif(x==0):\\n    print(''.join(map(str,te)))\\n    return\\nelse:\\n    ans=ans[0:x]\\n    print(''.join(map(str,te))+'.'+''.join(map(str,ans)))\\n    \\n        \\n            \\n            \\n        \\n        \\n\", \"from sys import *\\ninput = stdin.readline\\nn,t = list(map(int,input().split()))\\nnum = input()\\nidx = num.find(\\\".\\\")\\nif idx<0:\\n    print(num)\\n    return\\ncnt=1\\nfor i in range(idx+1,n):\\n    if num[i]<\\\"5\\\":\\n        if 5-int(num[i])==1:cnt+=1\\n        else:cnt=1\\n    if num[i]>=\\\"5\\\":\\n        j = min(cnt,t)\\n        if num[i-j]!=\\\".\\\":\\n            num = num[:i-j]+str(int(num[i-j])+1)\\n        else:\\n            curr = 0\\n            while num[idx-curr-1]==\\\"9\\\" and (idx-curr)!=0:\\n                curr+=1\\n            num = num[:idx-curr-1]+str(int(num[idx-curr-1])+1)+\\\"0\\\"*curr if curr!=idx else \\\"1\\\"+\\\"0\\\"*curr\\n        break\\nprint(num)\\n\", \"n,t = list(map(int,input().split()))\\nnum = input()\\nidx = num.index(\\\".\\\")\\ncnt=1\\nfor i in range(idx+1,n):\\n    if num[i]<\\\"5\\\":\\n        if 5-int(num[i])==1:cnt+=1\\n        else:cnt=1\\n    if num[i]>=\\\"5\\\":\\n        j = min(cnt,t)\\n        if num[i-j]!=\\\".\\\":\\n            num = num[:i-j]+str(int(num[i-j])+1)\\n        else:\\n            curr = 0\\n            while num[idx-curr-1]==\\\"9\\\" and (idx-curr)!=0:\\n                curr+=1\\n            num = num[:idx-curr-1]+str(int(num[idx-curr-1])+1)+\\\"0\\\"*curr if curr!=idx else \\\"1\\\"+\\\"0\\\"*curr\\n        break\\nprint(num)\\n\"]",
    "test": "{\n  \"inputs\": [\n    \"6 1\\n10.245\\n\",\n    \"6 2\\n10.245\\n\",\n    \"3 100\\n9.2\\n\",\n    \"12 5\\n872.04488525\\n\",\n    \"35 8\\n984227318.2031144444444444494637612\\n\",\n    \"320 142\\n2704701300865535.432223312233434114130011113220102420131323010344144201124303144444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444447444444444444444444444444444444615444444482101673308979557675074444444444444446867245414595534444693160202254444449544495367\\n\",\n    \"5 10\\n1.555\\n\",\n    \"6 1\\n0.9454\\n\",\n    \"7 1000000000\\n239.923\\n\",\n    \"7 235562\\n999.999\\n\",\n    \"9 2\\n23999.448\\n\",\n    \"9 3\\n23999.448\\n\",\n    \"13 1\\n761.044449428\\n\",\n    \"3 1\\n0.1\\n\",\n    \"3 1\\n9.9\\n\",\n    \"3 1\\n0.9\\n\",\n    \"31 15\\n2707786.24030444444444444724166\\n\",\n    \"4 100\\n99.9\\n\",\n    \"3 10\\n9.9\\n\",\n    \"22 100\\n11111111111111111111.5\\n\",\n    \"3 1\\n9.5\\n\",\n    \"8 100\\n9.444445\\n\",\n    \"6 2\\n999.45\\n\",\n    \"3 100\\n9.9\\n\",\n    \"18 100\\n9.4444444444454444\\n\",\n    \"16 999\\n9595959.95959595\\n\",\n    \"4 100\\n99.5\\n\",\n    \"5 1\\n999.9\\n\",\n    \"4 1\\n5.59\\n\",\n    \"4 1\\n99.5\\n\",\n    \"4 1\\n99.9\\n\",\n    \"18 6\\n102345678999.44449\\n\",\n    \"3 3\\n9.9\\n\",\n    \"5 1\\n99.99\\n\",\n    \"7 1\\n99999.9\\n\",\n    \"3 121\\n9.9\\n\",\n    \"8 6\\n9.444445\\n\",\n    \"3 100\\n8.9\\n\",\n    \"10 1\\n999.999999\\n\",\n    \"5 100\\n6.666\\n\",\n    \"4 100\\n9.99\\n\",\n    \"6 1\\n9.9999\\n\",\n    \"4 10\\n99.9\\n\",\n    \"5 1\\n9.999\\n\",\n    \"3 1231\\n9.9\\n\",\n    \"5 2\\n999.9\\n\",\n    \"5 100\\n144.5\\n\",\n    \"5 100\\n99.45\\n\",\n    \"10 1\\n0.50444445\\n\",\n    \"7 1\\n1.51111\\n\",\n    \"5 1\\n199.9\\n\",\n    \"3 100\\n9.5\\n\",\n    \"7 1000\\n409.659\\n\",\n    \"4 10\\n99.5\\n\",\n    \"4 10\\n10.9\\n\",\n    \"4 1\\n19.5\\n\"\n  ],\n  \"outputs\": [\n    \"10.25\\n\",\n    \"10.3\\n\",\n    \"9.2\\n\",\n    \"872.1\\n\",\n    \"984227318.2031144445\\n\",\n    \"2704701300865535.4322233122334341141300111132201024201313230103441442011243032\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"240\\n\",\n    \"1000\\n\",\n    \"23999.5\\n\",\n    \"24000\\n\",\n    \"761.04445\\n\",\n    \"0.1\\n\",\n    \"10\\n\",\n    \"1\\n\",\n    \"2707786.24031\\n\",\n    \"100\\n\",\n    \"10\\n\",\n    \"11111111111111111112\\n\",\n    \"10\\n\",\n    \"10\\n\",\n    \"1000\\n\",\n    \"10\\n\",\n    \"10\\n\",\n    \"9595960\\n\",\n    \"100\\n\",\n    \"1000\\n\",\n    \"6\\n\",\n    \"100\\n\",\n    \"100\\n\",\n    \"102345679000\\n\",\n    \"10\\n\",\n    \"100\\n\",\n    \"100000\\n\",\n    \"10\\n\",\n    \"10\\n\",\n    \"9\\n\",\n    \"1000\\n\",\n    \"7\\n\",\n    \"10\\n\",\n    \"10\\n\",\n    \"100\\n\",\n    \"10\\n\",\n    \"10\\n\",\n    \"1000\\n\",\n    \"145\\n\",\n    \"100\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"200\\n\",\n    \"10\\n\",\n    \"410\\n\",\n    \"100\\n\",\n    \"11\\n\",\n    \"20\\n\"\n  ]\n}",
    "tags": [
        "reasoning/coding"
    ]
}