{
    "problem": "You are an expert Python programmer, and here is your task: Let us call a pair of integer numbers m-perfect, if at least one number in the pair is greater than or equal to m. Thus, the pairs (3, 3) and (0, 2) are 2-perfect while the pair (-1, 1) is not.\n\nTwo integers x, y are written on the blackboard. It is allowed to erase one of them and replace it with the sum of the numbers, (x + y).\n\nWhat is the minimum number of such operations one has to perform in order to make the given pair of integers m-perfect?\n\n\n-----Input-----\n\nSingle line of the input contains three integers x, y and m ( - 10^18 \u2264 x, y, m \u2264 10^18).\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preffered to use the cin, cout streams or the %I64d specifier.\n\n\n-----Output-----\n\nPrint the minimum number of operations or \"-1\" (without quotes), if it is impossible to transform the given pair to the m-perfect one.\n\n\n-----Examples-----\nInput\n1 2 5\n\nOutput\n2\n\nInput\n-1 4 15\n\nOutput\n4\n\nInput\n0 -1 5\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first sample the following sequence of operations is suitable: (1, 2) $\\rightarrow$ (3, 2) $\\rightarrow$ (5, 2).\n\nIn the second sample: (-1, 4) $\\rightarrow$ (3, 4) $\\rightarrow$ (7, 4) $\\rightarrow$ (11, 4) $\\rightarrow$ (15, 4).\n\nFinally, in the third sample x, y cannot be made positive, hence there is no proper sequence of operations.",
    "solution": "[\"k = 0\\nx, y, m = map(int, input().split())\\nif (y < x):\\n    x, y = y, x\\nif (y >= m):\\n    print(0)\\nelse:\\n    if (x <= 0) and (y <= 0):\\n        print(-1)\\n    else:\\n        if (x <= 0) and (y > 0):\\n            if (abs(x) % y > 0):\\n                k += abs(x) // y + 1\\n            else:\\n                k += abs(x) // y\\n            x = x + y * k\\n        a = 0\\n        b = 1\\n        c = 0\\n        while (c < 5000000000000000000):\\n            if (a * x + b * y >= m):\\n                print(k)\\n                break\\n            c = a + b\\n            a = b\\n            b = c\\n            k += 1\\n        if (c >= 5000000000000000000):\\n            print(-1)\", \"def doit():\\n    x, y, m = [int(k) for k in input().strip().split()]\\n    if x < y:\\n        x, y = y, x\\n    if x >= m:\\n        print(0)\\n        return\\n\\n    if x<=0 and y<=0:\\n        print(-1)\\n        return\\n\\n    k = 0\\n    if y < 0:\\n        k = (-y+x-1)//x\\n        y += k*x\\n        assert(y >= 0)\\n    if x < y:\\n        x, y = y, x\\n        \\n    while x < m:\\n        k += 1\\n        x, y = x+y, x\\n        if x < y:\\n            x, y = y, x\\n    print(k)\\n\\ndoit()\\n\", \"x, y, m = list(map(int, input().split()))\\nif max(x, y) >= m:\\n    print(0)\\nelif x <= 0 and y <= 0:\\n    print(-1)\\nelse:   \\n    if x > y:\\n        x, y = y, x\\n    ans, st = 0, 0\\n    add = 0\\n    if x <= 0:  \\n        st = (0 - x + y - 1) // y\\n        x += y * st\\n    ans = st + (m - x + y - 1) // y\\n    while y < m:\\n        x, y = y, x + y\\n        add += 1\\n        ans = min(ans, add + st + (m - x + y - 1) // y)\\n    ans = min(ans, add + st)\\n    print(ans)\\n\", \"x, y, m = list(map(int, input().split()))\\nx, y = min(x, y), max(x, y)\\nif y >= m:\\n    print(0)\\nelif y <= 0:\\n    print(-1)\\nelse:\\n    c = 0\\n    if x <= 0:\\n        q = (-x + y - 1) // y\\n        c += q\\n        x += q * y\\n    while y < m:\\n        x, y = y, x + y\\n        c += 1\\n    print(c)\\n\", \"x, y, m = list(map(int, input().split()))\\nx, y = min(x, y), max(x, y)\\nif y >= m:\\n    print(0)\\nelif y <= 0:\\n    print(-1)\\nelse:\\n    c = 0\\n    while y < m:\\n        q = (2 * y - x) // y\\n        c += q\\n        x, y = y, x + q * y\\n    print(c)\\n\", \"s = input().split()\\nx, y, m = (int(i) for i in s)\\n\\nans = 0\\n\\nif x >= m or y >= m:\\n    print(0)\\nelif x <= 0 and y <= 0:\\n    print(-1)\\nelse:\\n    if x < 0:\\n        q = abs(x // y)\\n        ans += q\\n        x += y * q\\n    elif y < 0:\\n        q = abs(y // x)\\n        ans += q\\n        y += x * q\\n\\n    while x < m and y < m:\\n        ans += 1\\n        if x < y:\\n            x = x + y\\n        else:\\n            y = x + y\\n    \\n    print(ans)\", \"#! /usr/bin/env python\\n\\ndef change(x, y):\\n    if x > y:\\n        tmp = y\\n        y = x\\n        x = tmp\\n    return (x, y)\\n\\nx, y, m = [int(x) for x in input().split()]\\nif x >= m or y >= m:\\n    ans = 0\\nelif x <= 0 and y <= 0:\\n    ans = -1\\nelse:\\n    ans = 0\\n    x, y = change(x, y)\\n    if x < 0:\\n        ans = int(-x / y)\\n        ans += 1\\n        x = y - (-x % y)\\n    while y < m:\\n        tmp = x + y\\n        x = y\\n        y = tmp\\n        x, y = change(x, y)\\n        ans += 1\\nprint(ans)\\n\", \"x, y, m = [int(x) for x in input().split()]\\nx, y = min(x, y), max(x, y)\\n\\nif y >= m:\\n  print(0)\\n  return\\n\\nif y <= 0:\\n  print(-1)\\n  return\\n\\nc = 0\\nif x < 0 and y > 0:\\n  if m <= 0:\\n    c = (m - x) // y\\n  else:\\n    c = -x // y\\n  x += c * y\\n\\nwhile x < m and y < m:\\n  xx = x + y\\n  if xx <= min(x, y):\\n    print(-1)\\n    return\\n  x, y = xx, max(x, y)\\n  c += 1\\nprint(c)\\n\", \"# -*- coding: utf-8 -*-\\n\\ndef main():\\n\\tx, y, m = map(int, input().split())\\n\\tb1 = min(x, y)\\n\\tb2 = max(x, y)\\n\\tcount = 0\\n\\tif b2 >= m:\\n\\t\\treturn 0\\n\\tif b2 <= 0:\\n\\t\\treturn -1\\n\\tif b1 < 0:\\n\\t\\tcount = (b2 - b1 + (b2 - 1)) // b2\\n\\t\\tb = b2\\n\\t\\tb2 = b1 + count * b2\\n\\t\\tb1 = b\\n\\twhile b2 < m:\\n\\t\\tb = b1 + b2\\n\\t\\tb1 = min(b2, b)\\n\\t\\tb2 = max(b2, b)\\n\\t\\tcount += 1\\n\\treturn count\\n\\ndef __starting_point():\\n\\tprint('{:#d}'.format(main()))\\n__starting_point()\", \"x, y, m = map(int, input().split())\\n\\nx, y = min(x, y), max(x, y)\\n\\nif y >= m:\\n    print(0)\\nelif y <= 0:\\n    print(-1)\\nelse:\\n    c = 0\\n    while y < m:\\n        q = (2*y-x) //y\\n        c += q\\n        x, y = y, x+q*y\\n    print(c)\", \"x, y, m = list(map(int, input().split()))\\nif max(x, y) >= m:\\n    print(0)\\nelif m < 0 or max(x, y) <= 0:\\n    print(-1)\\nelse:\\n    if x + y < 0:\\n        cnt = (max(x, y) - min(x, y)) // max(x, y)\\n        x, y = min(x, y) + max(x, y) * cnt, max(x, y)\\n    else:\\n        cnt = 0\\n    while max(x, y) < m:\\n        x, y = max(x, y), x + y\\n        cnt += 1\\n    print(cnt)\\n\", \"z=[int(p) for p in input().split()]\\nm=z[2]\\nlst=[]\\nlst.append(z[0])\\nlst.append(z[1])\\ntempi=min(lst)\\ntempa=max(lst)\\n\\ncount=0\\nfibo=[]\\n\\n\\nn=1000000000000000000\\ndef fib(n):\\n        \\n        a, b = 0, 1\\n        while b < n:\\n                fibo.append(b)\\n                a, b = b, a+b\\n    \\n\\n\\ndef add(m):\\n        n=10**18\\n        tempi=min(lst)\\n        tempa=max(lst)\\n        count=0\\n        if(tempi>0 and tempa>0 and m>tempa):\\n                fib(n)\\n                for p in range(1,len(fibo)+1):\\n                        if(((fibo[p]*tempa)+ (fibo[p-1]*tempi))>=m):\\n                                count+=p\\n                                return count\\n        elif(tempi==0 or tempa==0):\\n                count=1\\n                fib(n)\\n                tempi=tempa+(tempi)\\n                for p in range(1,len(fibo)):\\n                        if(((fibo[p]*tempa)+ (fibo[p-1]*tempi))>=m):\\n                                count+=p\\n                                return count\\n\\n        elif(tempi<0 and tempa>0):\\n                val=(-(tempi)//tempa)+1\\n                count=val\\n                tempi=tempi+(val*tempa)\\n                fib(n)\\n                for p in range(1,len(fibo)):\\n                        if(((fibo[p]*tempa)+ (fibo[p-1]*tempi))>=m):\\n                                count+=p\\n                                return count\\n\\n        \\n\\n\\n\\n\\n\\nif(tempi>0 and tempa>0 and m>tempa):\\n        cou=add(m)\\n        print(cou)\\n\\nelif(tempi>0 and tempa>0 and m<=tempa):\\n        print(0)\\n\\nelif(tempi==0 ):\\n        if(tempi==0 and tempa==0 and m>0):\\n                print(-1)\\n        elif(tempi==0 and tempa==0 and m<=0):\\n                print(0)\\n        elif(tempa==0 and tempi<0 and m>0):\\n                print(-1)\\n                \\n        else:\\n                cou=add(m)\\n                print(cou)\\nelif(tempi<0 and tempa>0):\\n        if(m<=tempa):\\n                print(0)\\n        else:\\n                cou=add(m)\\n                print(cou)\\nelif(tempi<0 and tempa==0):\\n        if(m>0):\\n                print(-1)\\n        else:\\n                print(0)\\nelif(tempi<0 and tempa<0):\\n        if(m>=0):\\n                print(-1)\\n        elif(m<0 and m<=tempa):\\n                print(0)\\n        elif(m<0 and m>tempa):\\n                print(-1)\\n\\n        \\n\\n\\n        \\n                \\n                \\n                        \\n                        \\n                                \\n                        \\n                \\n\\n\\n                        \\n                        \\n                        \\n\", \"x, y, m = map(int, input().split())\\nif x < y: x, y = y, x\\nif x >= m: print(0)\\nelif x > 0:\\n    s = 0\\n    if y < 0:\\n        s = (-y) // x + 1\\n        y += x * s\\n    while x < m:\\n        x, y = x + y, x\\n        s += 1\\n    print(s)\\nelif x < m: print(-1)\\nelse: print(0)\", \"def Solve():\\n    x,y,m=list(map(int,input().split()))\\n\\n    if(x>=m or y>=m):\\n        return 0\\n\\n    if(x<=0 and y<=0):\\n        return -1\\n    ans=0\\n    if(y<=0):\\n        ans=abs(y)//x+1\\n        y+=ans*x\\n\\n    elif(x<=0):\\n        ans=abs(x)//y+1\\n        x+=ans*y\\n\\n    while(x<m and y<m):\\n        if(x<y):\\n            x+=y\\n        else:\\n            y+=x\\n        ans+=1\\n\\n    return ans\\nprint(Solve())\\n\", \"from sys import stdin\\n\\n__author__ = 'artyom'\\n\\n\\ndef read_next_line():\\n  return list(map(int, stdin.readline().strip().split()))\\n\\n\\nx, y, m = read_next_line()\\na = [x, y]\\nx = min(a)\\ny = max(a)\\nif y <= 0 and m > y:\\n  print(-1)\\nelse:\\n  count = 0\\n  if x < 0 and m > y:\\n    count = -(x // y)\\n    x = x % y\\n  while m > y:\\n    tmp = y\\n    y = x + y\\n    x = tmp\\n    count += 1\\n  print(count)\", \"x, y, m = map(int, input().split())\\nif x < y: x, y = y, x\\nif x >= m: print(0)\\nelif x > 0:\\n    s = 0\\n    if y < 0:\\n        s = (-y) // x + 1\\n        y += x * s\\n    while x < m:\\n        x, y = x + y, x\\n        s += 1\\n    print(s)\\nelif x < m: print(-1)\\nelse: print(0)\", \"x, y, m = map(int, input().split())\\nif max(x, y) >= m:\\n    print(0)\\nelif max(x, y) <= 0:\\n    print(-1)\\nelse:\\n    p, val = sorted([x, y]), 0\\n    if p[0] < 0:\\n        s = (min(m, 0) - p[0]) // p[1]\\n        p[0] += s * p[1]\\n        val += s\\n    while max(p) < m:\\n        p, val = [sum(p), max(p)], val + 1\\n    print(val)\", \"x, y, m = (int(q) for q in input().split())\\nif x >= m or y >= m:\\n\\tprint(0)\\n\\treturn\\nif x <= 0 and y <= 0:\\n\\tprint(-1)\\n\\treturn\\nans = 0\\nif x < 0:\\n\\tans += -x // y\\n\\tx += -x // y * y\\nif y < 0:\\n\\tans += -y // x\\n\\ty += -y // x * x\\nwhile x < m and y < m:\\n\\tans += 1\\n\\tif x < y:\\n\\t\\tx += y\\n\\telse:\\n\\t\\ty += x\\nprint(ans)\\n\", \"#!/usr/bin/env python3\\nx, y, m = list(map(int,input().split()))\\nif not (x < y):\\n    x, y = y, x\\nif m <= y:\\n    print(0)\\nelif y <= 0:\\n    print(-1)\\nelse:\\n    i = 0\\n    if x < 0:\\n        j = - (x // y)\\n        x += j * y\\n        i += j\\n    while y < m:\\n        x, y = y, x + y\\n        i += 1\\n    print(i)\\n\", \"x, y, xx = map(int, input().split())\\ncnt = 0\\nwhile max(x, y) < xx:\\n    if x < y:\\n        x, y = y, x\\n    l, r, m = 0, 4 * 10 ** 18, 0\\n    while r > l + 1:\\n        m = (l + r) // 2;\\n        if x >= m * x + y:\\n            l = m\\n        else:\\n            r = m\\n    if r == 4e18:\\n        print(-1)\\n        return\\n    cnt += r\\n    temp = x\\n    x = r * x + y\\n    y = temp\\nprint(cnt)\", \"#!/usr/bin/env python3\\n\\nx, y, m = list(map(int, input().split()))\\nresult = 0\\nif x <= 0 and y <= 0:\\n    if x < m and y < m:\\n        print(-1)\\n    else:\\n        print(0)\\n    return\\n\\nwhile x < m and y < m:\\n    x, y = (y, x) if x > y else (x, y)\\n    tmp = (2 * y - x - 1) // y\\n    if tmp == 0:\\n        tmp = 1\\n    result += tmp\\n    x = x + tmp * y\\nprint(result)\\n\", \"def main():\\n    a, b, m = list(map(int, input().split()))\\n    if a > b:\\n        a, b = b, a\\n    if m <= b:\\n        print(0)\\n        return\\n    if b <= 0:\\n        print(-1)\\n        return\\n    i = max((b - a) // b, 0)\\n    a += b * i\\n    while b < m:\\n        a, b, i = b, a + b, i + 1\\n    print(i)\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"def ag():\\n  a,b,m = list(map(int,input().split()))\\n  x = min(a,b)\\n  y = max(a,b)\\n  res = 0\\n  if x >= m or y >= m:\\n    return 0\\n  elif y<=0:\\n    return \\\"-1\\\"\\n  if x<0:\\n    res += int((abs(x)+y-1)/y)\\n    x += y*res\\n \\n  while y < m:\\n    x1 = y \\n    y = y + x\\n    x = x1\\n    res += 1\\n  return res\\nprint(ag())\\n\", \"x, y, m = map(int, input().split())\\nif x > y:\\n  x, y = y, x\\nif y >= m:\\n  print(0)\\n  return\\nif y <= 0:\\n  print(-1)\\n  return\\nanw = 0\\n\\nif x < 0:\\n  anw += abs(x)//y\\n  x += (abs(x)//y)*y\\n#print(\\\"anw aft\\\", anw, x)\\nwhile max(x, y) < m:\\n  if x > y:\\n    x, y = y, x\\n  x = y+x\\n  anw += 1\\nprint(anw)\", \"x,y,m = list(map(int,input().split()))\\nif(x > y):\\n\\tx,y = y,x\\nif(y >= m):\\n\\tprint('0')\\nelif(x+y <= x):\\n\\tprint('-1')\\nelse:\\n\\tans = (y-x+y-1)//y\\n\\tx += y*ans\\n\\twhile(x < m):\\n\\t\\tx,y = x+y,x\\n\\t\\tans += 1\\n\\tprint(ans)\\n\\n\"]",
    "test": "{\n  \"inputs\": [\n    \"1 2 5\\n\",\n    \"-1 4 15\\n\",\n    \"0 -1 5\\n\",\n    \"0 1 8\\n\",\n    \"-134 -345 -134\\n\",\n    \"-134 -345 -133\\n\",\n    \"999999999 -1000000000 1000000000\\n\",\n    \"0 0 0\\n\",\n    \"0 0 1\\n\",\n    \"-1000000000000000000 1 1000000000000000000\\n\",\n    \"-3 26 -1\\n\",\n    \"-25 4 -8\\n\",\n    \"12 30 -8\\n\",\n    \"-12 17 3\\n\",\n    \"4 -11 28\\n\",\n    \"38 174 957147453\\n\",\n    \"154 30 763391461\\n\",\n    \"3 193 648520002\\n\",\n    \"139 82 923851170\\n\",\n    \"171 185 534908267\\n\",\n    \"-868993006 -389009632 -766659629\\n\",\n    \"-429468031 69656014 39767881\\n\",\n    \"185212727 871828769 828159476\\n\",\n    \"140457446 731228634 -75123935\\n\",\n    \"223567628 -731033737 352248633\\n\",\n    \"-187818082 -372699371 -301077133\\n\",\n    \"-552043292 -693546115 415527936\\n\",\n    \"-29007970 -344600631 62206369\\n\",\n    \"101292660 -305927896 648565756\\n\",\n    \"702748103 -278432024 995244274\\n\",\n    \"0 0 -1\\n\",\n    \"0 0 0\\n\",\n    \"0 0 1000000000\\n\",\n    \"0 0 1\\n\",\n    \"1 -999999999 239239239\\n\",\n    \"-1 -1 0\\n\",\n    \"-1 0 0\\n\",\n    \"-1 0 1\\n\",\n    \"-1000000000 -1000000000 -1000000000\\n\",\n    \"-1000000000 -1000000000 1000000000\\n\",\n    \"999999999 999999999 1000000000\\n\",\n    \"-1 1 609276626\\n\",\n    \"-1 2 926098525\\n\",\n    \"0 0 698431198\\n\",\n    \"0 -3 702455284\\n\",\n    \"0 0 648749804\\n\",\n    \"-1 0 861856808\\n\",\n    \"2 2 -213745374\\n\",\n    \"-1 1 21065410\\n\",\n    \"3 -3 607820420\\n\",\n    \"36 -58 428518679\\n\",\n    \"8 55 931239629\\n\",\n    \"-99 -91 523666385\\n\",\n    \"-56 -11 631827324\\n\",\n    \"-4 6 447215792\\n\",\n    \"-47 -31 -669106932\\n\",\n    \"12 -76 -999189104\\n\",\n    \"39 15 -960040787\\n\",\n    \"-96 26 -210129802\\n\",\n    \"93 86 -850132431\\n\",\n    \"1 -1000000000000000000 1000000000000000000\\n\",\n    \"-2348349823443 234234545453 1000000000000000000\\n\",\n    \"0 1 679891637638612258\\n\",\n    \"-1000000000000000000 -1000000000000000000 -1000000000000000000\\n\",\n    \"-1000000000000000000 -1000000000000000000 -999999999999999999\\n\",\n    \"-100000000000000 1 233\\n\",\n    \"-1000000000000 2 1000000000000\\n\",\n    \"-1000000000000 3 1000000000\\n\",\n    \"10 -10 0\\n\",\n    \"-1000000000000000 2 444\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"0\\n\",\n    \"-1\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"-1\\n\",\n    \"1000000000000000087\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"8\\n\",\n    \"33\\n\",\n    \"33\\n\",\n    \"32\\n\",\n    \"33\\n\",\n    \"31\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"5\\n\",\n    \"0\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"8\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"1000000040\\n\",\n    \"-1\\n\",\n    \"0\\n\",\n    \"-1\\n\",\n    \"0\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"44\\n\",\n    \"43\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"0\\n\",\n    \"37\\n\",\n    \"42\\n\",\n    \"37\\n\",\n    \"36\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"39\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1000000000000000087\\n\",\n    \"43\\n\",\n    \"86\\n\",\n    \"0\\n\",\n    \"-1\\n\",\n    \"100000000000012\\n\",\n    \"500000000057\\n\",\n    \"333333333375\\n\",\n    \"0\\n\",\n    \"500000000000012\\n\"\n  ]\n}",
    "tags": [
        "reasoning/coding"
    ]
}