{
    "problem": "You are an expert Python programmer, and here is your task: A few years ago Sajjad left his school and register to another one due to security reasons. Now he wishes to find Amir, one of his schoolmates and good friends.\n\nThere are n schools numerated from 1 to n. One can travel between each pair of them, to do so, he needs to buy a ticket. The ticker between schools i and j costs $(i + j) \\operatorname{mod}(n + 1)$ and can be used multiple times. Help Sajjad to find the minimum cost he needs to pay for tickets to visit all schools. He can start and finish in any school.\n\n\n-----Input-----\n\nThe first line contains a single integer n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the number of schools.\n\n\n-----Output-----\n\nPrint single integer: the minimum cost of tickets needed to visit all schools.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n0\n\nInput\n10\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the first example we can buy a ticket between the schools that costs $(1 + 2) \\operatorname{mod}(2 + 1) = 0$.",
    "solution": "[\"n = int(input())\\nprint((n-1) // 2)\", \"\\nimport sys\\n#sys.stdin=open(\\\"data.txt\\\")\\ninput=sys.stdin.readline\\n\\nn=int(input())\\n\\nprint((n-1)//2)\", \"from sys import stdin, stdout\\n\\n\\nn = int(stdin.readline().rstrip())\\n\\nif n%2:\\n    print((n-1)//2)\\nelse:\\n    print(n//2 - 1)\\n\", \"n = int(input())\\nprint ((n - 1) // 2)\", \"import itertools\\n\\ndef solve(n):\\n    ans = (n + 1) // 2\\n\\n    return ans - 1\\n\\ndef main():\\n    n = int(input())\\n    print(solve(n))\\n\\nmain()\\n\", \"schools = int(input())\\n\\nprint((schools-1)//2)\", \"n=int(input())\\nn+=1\\nprint(int(n/2)-1)\", \"def main():\\n    n = int(input())\\n    print((n-1) // 2)\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"i=int(input())\\nif i%2:\\n  print((i-1)//2)\\nelse:\\n  print(i//2-1)\", \"n = int(input())\\nprint((n - 1) // 2)\", \"n = int(input())\\nprint((n+1)//2 - 1)\", \"n=int(input())\\nprint(int((n+1)/2-1))\\n\\n\", \"n = input()\\nn = int(n)\\nif (n % 2) != 0:\\n\\tprint (n // 2)\\nelse:\\n\\tprint ((n // 2) -1)\", \"a = int(input())\\nprint(int((a-1)/2))\", \"n=int(input())\\nprint ((n-1)//2)\", \"n=int(input())\\nprint(n//2-1+n%2)\\n\", \"def boka():\\n    s = int(input())\\n    s -= 1\\n    s /= 2\\n    s = int(s)\\n    print(s)\\n\\n\\nboka()\\n\", \"print((int(input())-1) // 2)\", \"x = int(input())\\nx = x-1\\nprint(int(x/2))\", \"a = int(input())\\nprint((a - 1) // 2)\\n\", \"n=int(input())\\nq=2\\nr=n+2\\nif n%2==0:\\n   print((n//2)-1)\\nelse:print(n//2)\\n   \\n\", \"n = int(input())\\nprint((n+1)//2 -1)\\n\", \"n=int(input())\\nif n%2==0 :\\n    print((n//2)-1)\\nelse :\\n    print(n//2)\\n\", \"import sys\\n\\nn = int(sys.stdin.read())\\n\\nprint((n - 1) // 2)\\n\", \"a = int(input())\\n\\nif a == 1:\\n    print(\\\"0\\\")\\nelse:\\n    s = 1\\n    t = a\\n    q = []\\n    if a % 2 == 0:\\n        while t > s:\\n            q += [s]\\n            q += [t]\\n            s += 1\\n            t -= 1\\n    else:\\n        while t != s:\\n            q += [s]\\n            q += [t]\\n            s += 1\\n            t -= 1\\n        q += [s]\\n\\n    i = 0\\n    wyn = 0\\n    while i < len(q) - 1:\\n           wyn += (q[i] + q[i+1]) % (a + 1)\\n           i += 1\\n    print(wyn)\\n\"]",
    "test": "{\n  \"inputs\": [\n    \"2\\n\",\n    \"10\\n\",\n    \"43670\\n\",\n    \"4217\\n\",\n    \"17879\\n\",\n    \"31809\\n\",\n    \"40873\\n\",\n    \"77859\\n\",\n    \"53022\\n\",\n    \"79227\\n\",\n    \"100000\\n\",\n    \"82801\\n\",\n    \"5188\\n\",\n    \"86539\\n\",\n    \"12802\\n\",\n    \"20289\\n\",\n    \"32866\\n\",\n    \"33377\\n\",\n    \"31775\\n\",\n    \"60397\\n\",\n    \"100000\\n\",\n    \"99999\\n\",\n    \"99998\\n\",\n    \"99997\\n\",\n    \"99996\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"3\\n\"\n  ],\n  \"outputs\": [\n    \"0\\n\",\n    \"4\\n\",\n    \"21834\\n\",\n    \"2108\\n\",\n    \"8939\\n\",\n    \"15904\\n\",\n    \"20436\\n\",\n    \"38929\\n\",\n    \"26510\\n\",\n    \"39613\\n\",\n    \"49999\\n\",\n    \"41400\\n\",\n    \"2593\\n\",\n    \"43269\\n\",\n    \"6400\\n\",\n    \"10144\\n\",\n    \"16432\\n\",\n    \"16688\\n\",\n    \"15887\\n\",\n    \"30198\\n\",\n    \"49999\\n\",\n    \"49999\\n\",\n    \"49998\\n\",\n    \"49998\\n\",\n    \"49997\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"1\\n\"\n  ]\n}",
    "tags": [
        "reasoning/coding"
    ]
}