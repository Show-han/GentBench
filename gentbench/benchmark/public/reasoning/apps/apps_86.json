{
    "problem": "You are an expert Python programmer, and here is your task: You are given a positive integer $n$.\n\nLet $S(x)$ be sum of digits in base 10 representation of $x$, for example, $S(123) = 1 + 2 + 3 = 6$, $S(0) = 0$.\n\nYour task is to find two integers $a, b$, such that $0 \\leq a, b \\leq n$, $a + b = n$ and $S(a) + S(b)$ is the largest possible among all such pairs.\n\n\n-----Input-----\n\nThe only line of input contains an integer $n$ $(1 \\leq n \\leq 10^{12})$.\n\n\n-----Output-----\n\nPrint largest $S(a) + S(b)$ among all pairs of integers $a, b$, such that $0 \\leq a, b \\leq n$ and $a + b = n$.\n\n\n-----Examples-----\nInput\n35\n\nOutput\n17\n\nInput\n10000000000\n\nOutput\n91\n\n\n\n-----Note-----\n\nIn the first example, you can choose, for example, $a = 17$ and $b = 18$, so that $S(17) + S(18) = 1 + 7 + 1 + 8 = 17$. It can be shown that it is impossible to get a larger answer.\n\nIn the second test example, you can choose, for example, $a = 5000000001$ and $b = 4999999999$, with $S(5000000001) + S(4999999999) = 91$. It can be shown that it is impossible to get a larger answer.",
    "solution": "[\"n = int(input())\\n\\na = int(str(n)[0])\\nl = len(str(n)) - 1\\n\\nval1 = a * 10 ** l - 1\\nval2 = n - val1\\n\\ndef sd(x):\\n    return sum(int(d) for d in str(x))\\n\\nprint(sd(val1) + sd(val2))\\n\", \"n = int(input())\\na = [0]\\n\\nfor i in range(13):\\n\\tfor j in range(1, 10):\\n\\t\\ta += [int(str(j) + i * '9')]\\n\\nmx = 0\\n\\nfor i in a:\\n\\tif i <= n:\\n\\t\\tmx = max(mx, sum(map(int, str(i))) + sum(map(int, str(n-i))))\\n\\nprint(mx)\", \"#!/usr/bin/env python3\\ndef s(x):\\n    return sum(map(int, str(x)))\\nn = int(input())\\nans = 0\\na = 0\\nwhile a <= n:\\n    b = n - a\\n    ans = max(ans, s(a) + s(b))\\n    a = 10 * a + 9\\nprint(ans)\\n\", \"def s(x):\\n\\tres = 0\\n\\twhile x > 0:\\n\\t\\tres += x % 10\\n\\t\\tx //= 10\\n\\treturn res\\n\\nn = input()\\nans = 9*(len(n)-1)\\nn = int(n) - 10**(len(n) - 1) + 1\\nprint(ans + s(n))\", \"def mainA():\\n    n = int(input())\\n    s = input()\\n    cnt = 0\\n    for i in s:\\n        if i == '8':\\n            cnt += 1\\n    print(min(cnt, n // 11))\\n\\ndef mainB():\\n    def get(n):\\n        ret = 0\\n        while n > 0:\\n            ret += n % 10\\n            n //= 10\\n        return ret\\n    \\n    n = int(input())\\n    if n <= 9:\\n        print(n)\\n        return\\n    t = 9\\n    while n > t:\\n        t = t * 10 + 9\\n    t //= 10\\n    print(get(t) + get(n - t))\\n\\nmainB()\", \"n = int(input())\\nsa = \\\"0\\\"\\n\\ndef comp(k):\\n    a = int(k)\\n    b = n - a\\n    return b\\n\\nwhile comp(sa) >= 0:\\n    if comp(sa + \\\"9\\\") >= 0:\\n        sa += \\\"9\\\"\\n    else:\\n        break\\n\\nprint(sum(int(h) for h in (sa + str(comp(sa)))))\\n\", \"from math import log10, ceil\\n\\ndef sumdigs(n):\\n    return sum(map(int, str(n)))\\nn = int(input())\\ntens = int(log10(n))\\nnines = tens * 9\\nprint(nines + sumdigs(n - ((10 ** tens) - 1)))\\n\", \"s = input()\\nsu = sum(map(int, list(s)))\\n\\nwhile (len(s) > 0 and s[-1] == '9'):\\n    s = s[:-1]\\nprint(su + 9 * max(0, len(s) - 1))\", \"def sum(x):\\n    res = 0\\n    while x:\\n        res += x % 10\\n        x //= 10\\n    return res\\n\\nn = int(input())\\nans = 0\\nfor i in range(min(n, 1000)):\\n    ans = max(ans, sum(i) + sum(n - i))\\nfor i in range(1, 13):\\n    nine = '9' * i\\n    for j in range(10):\\n        tmp = int(str(j) + nine)\\n        if tmp <= n:\\n            ans = max(ans, sum(tmp) + sum(n - tmp))\\nprint(ans)\\n\", \"n = int(input())\\n\\ndef get(a):\\n    return sum(map(int, str(a)))\\n\\ndef solve(n):\\n    cnt = len(str(n))\\n    if cnt == 1:\\n        return get(n)\\n    ret = get(n)\\n    for a in ['9' * (cnt - 1)]:\\n        ret = max(get(int(a)) + get(n - int(a)), ret)\\n    return ret\\n    \\nprint(solve(n))\\n\\n\", \"a=int(input())\\nc=0\\nwhile a>0:\\n    if a%10<9 and a>9:t=10+a%10\\n    else:t=a%10\\n    c+=t\\n    a-=t\\n    a//=10\\nprint(c)\", \"n=input()\\nif int(n) < 10:\\n    print(n)\\nelse:\\n    sa = \\\"9\\\" * (len(n) - 1)\\n    b = int(n) - int(sa)\\n    sb = str(b)\\n    sum = 0\\n    for i in sa:\\n        sum += int(i)\\n    for i in sb:\\n        sum += int(i)\\n    print(sum)\\n\", \"n = int(input())\\nt = len(str(n))\\nif t==1:\\n  x = 0\\nelse:\\n  x = int((t-1)*'9')\\ny = n - x\\ndef sm(x):\\n  res = 0\\n  for i in str(x):\\n    res+=int(i)\\n  return res\\nprint(sm(x)+sm(y))\", \"def d(x):\\n    c = 0\\n    while x > 0:\\n        c += x%10\\n        x //= 10\\n    return c\\nn = int(input())\\nans = 0\\nif n <= 10:\\n    ans = n\\nelse:\\n    temp = 9\\n    while temp*10+9 < n:\\n        temp *= 10\\n        temp += 9\\n    b = n - temp\\n    ans += d(b)\\n    ans += d(temp)\\nprint(ans)\", \"n=int(input())\\na=n\\nc=0\\nwhile a>=10:\\n    a//=10\\n    c+=1\\nb=(a)*(10**c)-1\\na=n-b\\nc=0\\nwhile a!=0:\\n    c+=a%10\\n    a//=10\\na=b\\nwhile a!=0:\\n    c+=a%10\\n    a//=10\\nprint(c)\\n\", \"n = input()\\n\\nif len(n) == 1:\\n    print(n)\\nelse:\\n    if len([_ for _ in n if _ != '9']) == 0:\\n        a, b = n, '0'\\n    else:\\n        a = '9' * (len(n) - 1)\\n        b = str(int(n) - int(a))\\n\\n    s = sum([int(_) for _ in a]) + sum([int(_) for _ in b])\\n    print(s)\\n\", \"n=input()\\ndef su(n):\\n    s=0\\n    for i in str(n):\\n        s+=int(i)\\n    return s\\n    \\nif int('9'*len(n))<=int(n):\\n    print(9*len(n)+su(-int('9'*len(n))+int(n)))\\nelse:\\n    if len(n)>1:\\n        print(9*(len(n)-1)+su(-int('9'*(len(n)-1))+int(n)))\\n    else:\\n        print(n)\\n\", \"n=int(input())\\ns=0\\nm=0\\nwhile(m<=n):\\n\\ts=s+9\\n\\tm=m*10+9\\ny1=n-(m//10)\\ns=s-9\\ny=str(y1)\\nfor i in y:\\n\\ts=s+int(i)\\nprint (s)\\n\", \"#1000=999+1\\n#1000=499+501\\n\\n#35=9+26\\n\\nn=input()\\nx=len(n)\\n\\nif x>=2:\\n    m1=int(\\\"9\\\"*(x-1))\\nelse:\\n    m1=0\\nm2=int(n)-m1\\n\\nANS=0\\nfor i in str(m1)+str(m2):\\n    ANS+=int(i)\\n\\nprint(ANS)\\n\", \"from sys import stdin, stdout \\nfrom bisect import bisect_left, bisect_right\\nfrom collections import defaultdict\\nimport math\\nfrom fractions import Fraction as frac\\nfrom random import random\\ncin = stdin.readline\\ndef cout(x):\\n\\tstdout.write(str(x)+'\\\\n')\\ndef var(type = int):\\n    return type(stdin.readline())\\ndef readline(type = int):\\n    return map(type,stdin.readline().split())\\ndef readlist(type = int):\\n    return list(map(type,stdin.readline().split()))\\ndef sorted_indexes(arr):\\n    return sorted(range(len(arr)),key=arr.__getitem__)\\ndef printr(arr):\\n    [stdout.write(str(x)+' ')   for x in arr]\\n    cout('')\\ndef find_lt(a, x):#'Find rightmost value less than x'\\n    i = bisect_left(a, x)\\n    if i:\\n        return a[i-1]\\n    raise ValueError\\ndef find_gt(a, x):#'Find leftmost value greater than x'\\n    i = bisect_right(a, x)\\n    if i != len(a):\\n        return a[i]\\n    raise ValueError\\ndef dist(x,y):\\n    return math.sqrt(x*x + y*y)\\ndef binary_search(arr, x):\\n    i = bisect_left(arr, x)\\n    if i == len(arr) or arr[i] != x:\\n        return -1\\n    return i\\nMOD2 = 998244353\\n\\n#----------------FUncs\\n\\ndef sm(x):\\n    x = str(x)\\n    s = 0\\n    for n in x:\\n        s += int(n)\\n    return s\\n\\n\\n# -------------------------sdpt,sdpt131[Sudipta Banik]---------------------\\n\\nn = int(input())\\na = 0\\na_prev = 0\\nwhile a <= n:\\n    a_prev = a\\n    a = a*10 + 9\\na = a_prev\\nprint(sm(n-a)+sm(a))    \", \"def digsum(n):\\n    return sum(map(int, str(n)))\\n\\nA = int(input())\\nn = A // 2\\ns = str(n)\\ns = s[0] + '9' * len(s[1:])\\nprint(digsum(int(s)) + digsum(A-int(s)))\", \"n = int(input())\\nif n < 10:\\n\\tprint(n)\\n\\treturn\\na = n - int(str(n)[1:]) - 1\\nb = n - a\\na = [*map(int, str(a))]\\nb = [*map(int, str(b))]\\nprint(sum(a) + sum(b))\", \"import math\\n\\nn = int(input())\\n\\ndef S(n):\\n    return sum(map(int,list(str(n))))\\n\\nbase = 10**int(math.log10(n))\\na = base-1\\nres = 0\\nfor i in range(10):\\n    b = n-a\\n    res = max(res, S(a)+S(b))\\n    a+=base\\n    if a > n:\\n        break\\nprint(res)\\n\", \"n = input()\\nif len(n) == 1:\\n    print(int(n))\\nelse:\\n    a = \\\"\\\"\\n    if n[0] != '1':\\n        a += chr(ord(n[0]) - 1)\\n    a += '9' * (len(n) - 1)\\n    b = str(int(n) - int(a))\\n    print(sum(map(int, list(a) + list(b))))\\n\", \"\\\"\\\"\\\"n=int(input())\\ns=input()\\nc=0\\nfor i in range(0,len(s)):\\n    if(s[i]=='8'):\\n        c=c+1\\nk=len(s)//11\\nprint(min(c,k))\\\"\\\"\\\"\\n\\n\\nn=int(input())\\nN=str(n)\\nif(len(N)==1):\\n    print(n)\\nelse:\\n    l=len(N)-1\\n    k=int('9'*l)\\n    diff=n-k\\n    D=str(diff)\\n    K=str(k)\\n    sumu=0\\n    for i in range(0,len(D)):\\n        sumu=sumu+int(D[i])\\n    for i in range(0,len(K)):\\n        sumu=sumu+int(K[i])\\n    print(sumu)\\n\\n\"]",
    "test": "{\n  \"inputs\": [\n    \"35\\n\",\n    \"10000000000\\n\",\n    \"4394826\\n\",\n    \"96\\n\",\n    \"9999991\\n\",\n    \"999999999992\\n\",\n    \"290687942106\\n\",\n    \"1000000000000\\n\",\n    \"1\\n\",\n    \"8\\n\",\n    \"15\\n\",\n    \"894\\n\",\n    \"8581\\n\",\n    \"41764\\n\",\n    \"333625\\n\",\n    \"13350712\\n\",\n    \"142098087\\n\",\n    \"4536444302\\n\",\n    \"30892252868\\n\",\n    \"990\\n\",\n    \"9994\\n\",\n    \"99993\\n\",\n    \"999997\\n\",\n    \"99999995\\n\",\n    \"999999990\\n\",\n    \"9999999998\\n\",\n    \"99999999997\\n\",\n    \"99\\n\",\n    \"29\\n\",\n    \"10\\n\",\n    \"99999999999\\n\",\n    \"19\\n\",\n    \"109\\n\",\n    \"39\\n\",\n    \"999999\\n\",\n    \"9999\\n\",\n    \"199\\n\",\n    \"1999\\n\",\n    \"20\\n\",\n    \"9111119\\n\",\n    \"999\\n\",\n    \"678186539\\n\",\n    \"9999999\\n\",\n    \"119\\n\",\n    \"39999\\n\",\n    \"408\\n\",\n    \"909\\n\",\n    \"1009\\n\",\n    \"11\\n\",\n    \"9\\n\",\n    \"5\\n\",\n    \"2999\\n\",\n    \"324278748889\\n\",\n    \"234799\\n\",\n    \"110\\n\",\n    \"110884501982\\n\",\n    \"7019\\n\",\n    \"17219\\n\",\n    \"999999999999\\n\",\n    \"849925977\\n\",\n    \"700000019\\n\",\n    \"190420131558\\n\",\n    \"18\\n\",\n    \"15901772\\n\",\n    \"2303910749\\n\",\n    \"2452148459\\n\",\n    \"1140\\n\",\n    \"155690477371\\n\"\n  ],\n  \"outputs\": [\n    \"17\\n\",\n    \"91\\n\",\n    \"90\\n\",\n    \"24\\n\",\n    \"109\\n\",\n    \"200\\n\",\n    \"153\\n\",\n    \"109\\n\",\n    \"1\\n\",\n    \"8\\n\",\n    \"15\\n\",\n    \"39\\n\",\n    \"49\\n\",\n    \"58\\n\",\n    \"67\\n\",\n    \"85\\n\",\n    \"111\\n\",\n    \"116\\n\",\n    \"143\\n\",\n    \"36\\n\",\n    \"58\\n\",\n    \"75\\n\",\n    \"97\\n\",\n    \"131\\n\",\n    \"144\\n\",\n    \"170\\n\",\n    \"187\\n\",\n    \"18\\n\",\n    \"11\\n\",\n    \"10\\n\",\n    \"99\\n\",\n    \"10\\n\",\n    \"19\\n\",\n    \"12\\n\",\n    \"54\\n\",\n    \"36\\n\",\n    \"19\\n\",\n    \"28\\n\",\n    \"11\\n\",\n    \"68\\n\",\n    \"27\\n\",\n    \"116\\n\",\n    \"63\\n\",\n    \"20\\n\",\n    \"39\\n\",\n    \"30\\n\",\n    \"27\\n\",\n    \"28\\n\",\n    \"11\\n\",\n    \"9\\n\",\n    \"5\\n\",\n    \"29\\n\",\n    \"160\\n\",\n    \"61\\n\",\n    \"20\\n\",\n    \"146\\n\",\n    \"35\\n\",\n    \"47\\n\",\n    \"108\\n\",\n    \"132\\n\",\n    \"80\\n\",\n    \"138\\n\",\n    \"18\\n\",\n    \"95\\n\",\n    \"110\\n\",\n    \"116\\n\",\n    \"33\\n\",\n    \"154\\n\"\n  ]\n}",
    "tags": [
        "reasoning/coding"
    ]
}